{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._concatDataFrame = exports.mergeDataFrame = undefined;\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _createClass2 = require('babel-runtime/helpers/createClass');\nvar _createClass3 = _interopRequireDefault(_createClass2);\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _get2 = require('babel-runtime/helpers/get');\nvar _get3 = _interopRequireDefault(_get2);\nvar _inherits2 = require('babel-runtime/helpers/inherits');\nvar _inherits3 = _interopRequireDefault(_inherits2);\nvar _typeof2 = require('babel-runtime/helpers/typeof');\nvar _typeof3 = _interopRequireDefault(_typeof2);\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _exceptions = require('./exceptions');\nvar _generic = require('./generic');\nvar _generic2 = _interopRequireDefault(_generic);\nvar _series = require('./series');\nvar _series2 = _interopRequireDefault(_series);\nvar _utils = require('./utils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar parseArrayToSeriesMap = function parseArrayToSeriesMap(array, index) {\n  var dataMap = _immutable2.default.Map({});\n  array.forEach(function (el) {\n    if (el instanceof _immutable2.default.Map) {\n      el.keySeq().forEach(function (k) {\n        if (dataMap.has(k)) {\n          dataMap = dataMap.set(k, dataMap.get(k).push(el.get(k)));\n        } else {\n          dataMap = dataMap.set(k, _immutable2.default.List.of(el.get(k)));\n        }\n      });\n    } else if ((typeof el === 'undefined' ? 'undefined' : (0, _typeof3.default)(el)) === 'object') {\n      Object.keys(el).forEach(function (k) {\n        if (dataMap.has(k)) {\n          dataMap = dataMap.set(k, dataMap.get(k).push(el[k]));\n        } else {\n          dataMap = dataMap.set(k, _immutable2.default.List.of(el[k]));\n        }\n      });\n    }\n  });\n  dataMap.keySeq().forEach(function (k) {\n    dataMap = dataMap.set(k, new _series2.default(dataMap.get(k), {\n      name: k,\n      index: index\n    }));\n  });\n  return _immutable2.default.Map(dataMap);\n};\nvar DataFrame = function (_NDFrame) {\n  (0, _inherits3.default)(DataFrame, _NDFrame);\n  function DataFrame(data) {\n    var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck3.default)(this, DataFrame);\n    var _this = (0, _possibleConstructorReturn3.default)(this, (DataFrame.__proto__ || Object.getPrototypeOf(DataFrame)).call(this, data, kwargs));\n    if (Array.isArray(data)) {\n      _this.set_axis(0, (0, _utils.parseIndex)(kwargs.index, _immutable2.default.List(data)));\n      _this._data = parseArrayToSeriesMap(data, _this.index);\n      _this.set_axis(1, _this._data.keySeq());\n    } else if (data instanceof _immutable2.default.Map) {\n      _this._data = _immutable2.default.OrderedMap(data.keySeq().map(function (k) {\n        if (data instanceof _immutable2.default.Map && !(data.get(k) instanceof _series2.default)) throw new Error('Map must have [column, series] key-value pairs');\n        if (data instanceof _immutable2.default.Map) return [k, data.get(k).copy()];\n        throw new Error('Data is not Map');\n      }));\n      _this.set_axis(1, _this._data.keySeq());\n      _this.set_axis(0, _this._data.get(_this.columns.get(0)).index);\n    } else if (data instanceof _immutable2.default.List) {\n      var columns = void 0;\n      if (Array.isArray(kwargs.columns) || kwargs.columns instanceof _immutable2.default.Seq) columns = _immutable2.default.List(kwargs.columns);else if (kwargs.columns instanceof _immutable2.default.List) columns = kwargs.columns;else if (typeof kwargs.columns === 'undefined') columns = _immutable2.default.Range(0, data.get(0).size).toList();else throw new Error('Invalid columns');\n      _this._values = data;\n      _this._data = _immutable2.default.OrderedMap(columns.map(function (c, colIdx) {\n        return [c, new _series2.default(data.map(function (row) {\n          return row.get(colIdx);\n        }), {\n          index: kwargs.index\n        })];\n      }));\n      _this.set_axis(1, _this._data.keySeq());\n      _this.set_axis(0, _this._data.get(_this.columns.get(0)).index);\n    } else if (typeof data === 'undefined') {\n      _this._data = _immutable2.default.Map({});\n      _this.set_axis(0, _immutable2.default.List.of());\n      _this.set_axis(1, _immutable2.default.Seq.of());\n    }\n    _this._setup_axes(_immutable2.default.List.of(0, 1));\n    return _this;\n  }\n  (0, _createClass3.default)(DataFrame, [{\n    key: 'toString',\n    value: function toString() {\n      var _this2 = this;\n      var string = '\\t|';\n      this.columns.forEach(function (k) {\n        string += '  ' + k + '  |';\n      });\n      var headerRow = '-'.repeat(string.length);\n      string += '\\n' + headerRow + '\\n';\n      var stringUpdate = function stringUpdate(idx) {\n        var s = '';\n        _this2.columns.forEach(function (k) {\n          s += '  ' + _this2._data.get(k).iloc(idx) + '  |';\n        });\n        return s;\n      };\n      for (var idx = 0; idx < this.length; idx += 1) {\n        string += this.index.get(idx) + '\\t|';\n        string += stringUpdate(idx);\n        string += '\\n';\n      }\n      return string;\n    }\n  }, {\n    key: 'copy',\n    value: function copy() {\n      return new DataFrame(this._data, {\n        index: this.index\n      });\n    }\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      var _this3 = this;\n      var index = -1;\n      return {\n        next: function next() {\n          index += 1;\n          var done = !(index >= 0 && index < _this3.length);\n          var value = done ? undefined : _immutable2.default.Map(_this3.columns.map(function (k, idx) {\n            return [k, _this3.values.get(index).get(idx)];\n          }));\n          return {\n            value: value,\n            done: done\n          };\n        }\n      };\n    }\n  }, {\n    key: 'iterrows',\n    value: function iterrows() {\n      return (0, _utils.enumerate)(this);\n    }\n  }, {\n    key: 'set',\n    value: function set(column, series) {\n      if (series instanceof _series2.default) return new DataFrame(this._data.set(column, series), this.kwargs);else if (series instanceof _immutable2.default.List || Array.isArray(series)) return new DataFrame(this._data.set(column, new _series2.default(series, {\n        index: this.index,\n        name: column\n      })), this.kwargs);\n      throw new TypeError('series must be a Series!');\n    }\n  }, {\n    key: 'reset_index',\n    value: function reset_index() {\n      var _this4 = this;\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        drop: false\n      };\n      if (typeof args.drop !== 'undefined' && typeof args.drop !== 'boolean') throw new TypeError('drop must be a boolean');\n      var drop = typeof args.drop === 'undefined' ? false : args.drop;\n      var indexName = 'index';\n      if (this.columnExists('index')) {\n        var i = 0;\n        while (this.columnExists('level_' + i)) {\n          i += 1;\n        }\n        indexName = 'level_' + i;\n      }\n      var data = _immutable2.default.Map(this.columns.map(function (c) {\n        return [c, new _series2.default(_this4.get(c).values)];\n      }));\n      if (!args.drop) data = data.set(indexName, new _series2.default(this.index));\n      return new DataFrame(data);\n    }\n  }, {\n    key: 'iloc',\n    value: function iloc(rowIdx, colIdx) {\n      var _this5 = this;\n      if (typeof rowIdx === 'number') {\n        if (typeof colIdx === 'number') {\n          if (colIdx < 0 || colIdx >= this.shape[1]) throw new Error('colIdx out of bounds');\n          var getCol = this.columns.get(colIdx);\n          return new DataFrame(_immutable2.default.Map([[getCol, this.get(getCol).iloc(rowIdx, rowIdx + 1)]]), {\n            index: this.index.slice(rowIdx, rowIdx + 1)\n          });\n        } else if (Array.isArray(colIdx)) {\n          if (colIdx.length !== 2) throw new Error('colIdx must be length 2 (start and end positions)');\n          if (colIdx[1] <= colIdx[0]) throw new Error('colIdx end position cannot be less than or equal tostart position');\n          if (colIdx[0] < 0 || colIdx[1] > this.shape[1]) throw new Error('colIdx position out of bounds');\n          return new DataFrame(_immutable2.default.Map(_immutable2.default.Range(colIdx[0], colIdx[1]).map(function (idx) {\n            var getCol = _this5.columns.get(idx);\n            return [getCol, _this5.get(getCol).iloc(rowIdx, rowIdx + 1)];\n          }).toArray()), {\n            index: this.index.slice(rowIdx, rowIdx + 1)\n          });\n        } else if (typeof colIdx === 'undefined') {\n          return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n            return [c, _this5.get(c).iloc(rowIdx, rowIdx + 1)];\n          }).toArray()), {\n            index: this.index.slice(rowIdx, rowIdx + 1)\n          });\n        }\n        throw new TypeError('colIdx must be either integer or Array of integers');\n      } else if (Array.isArray(rowIdx)) {\n        if (typeof colIdx === 'number') {\n          if (colIdx < 0 || colIdx >= this.shape[1]) throw new Error('colIdx out of bounds');\n          var _getCol = this.columns.get(colIdx);\n          return new DataFrame(_immutable2.default.Map([[_getCol, this.get(_getCol).iloc(rowIdx[0], rowIdx[1])]]), {\n            index: this.index.slice(rowIdx[0], rowIdx[1])\n          });\n        } else if (Array.isArray(colIdx)) {\n          if (colIdx.length !== 2) throw new Error('colIdx must be length 2 (start and end positions)');\n          if (colIdx[1] <= colIdx[0]) throw new Error('colIdx end position cannot be less than or equal tostart position');\n          if (colIdx[0] < 0 || colIdx[1] > this.shape[1]) throw new Error('colIdx position out of bounds');\n          return new DataFrame(_immutable2.default.Map(_immutable2.default.Range(colIdx[0], colIdx[1]).map(function (idx) {\n            var getCol = _this5.columns.get(idx);\n            return [getCol, _this5.get(getCol).iloc(rowIdx[0], rowIdx[1])];\n          }).toArray()), {\n            index: this.index.slice(rowIdx[0], rowIdx[1])\n          });\n        } else if (typeof colIdx === 'undefined') {\n          return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n            return [c, _this5.get(c).iloc(rowIdx[0], rowIdx[1])];\n          }).toArray()), {\n            index: this.index.slice(rowIdx[0], rowIdx[1])\n          });\n        }\n        throw new TypeError('colIdx must be either integer or Array of integers');\n      }\n      throw new TypeError('rowIdx must be either integer or Array of integers');\n    }\n  }, {\n    key: 'head',\n    value: function head() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.iloc([0, n]);\n    }\n  }, {\n    key: 'tail',\n    value: function tail() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.iloc([this.length - n, this.length]);\n    }\n  }, {\n    key: '_assertColumnExists',\n    value: function _assertColumnExists(col) {\n      if (!this.columnExists(col)) throw new Error('Column ' + col + ' not in DataFrame');\n    }\n  }, {\n    key: 'columnExists',\n    value: function columnExists(col) {\n      return this.columns.indexOf(col) >= 0;\n    }\n  }, {\n    key: 'get',\n    value: function get(columns) {\n      var _this6 = this;\n      if ((typeof columns === 'string' || typeof columns === 'number') && this.columnExists(columns)) return this._data.get(columns);else if (Array.isArray(columns) || columns instanceof _immutable2.default.List || columns instanceof _immutable2.default.Seq) {\n        columns.forEach(function (c) {\n          if (!_this6.columnExists(c)) throw new Error('KeyError: ' + c + ' not found');\n        });\n        return new DataFrame(_immutable2.default.Map(columns.map(function (c) {\n          return [c, _this6.get(c)];\n        })), this.kwargs);\n      }\n      throw new Error('KeyError: ' + columns + ' not found');\n    }\n  }, {\n    key: 'where',\n    value: function where(other, op) {\n      if (!Array.isArray(other) && !(other instanceof _immutable2.default.List) && !(other instanceof _series2.default) && !(other instanceof DataFrame)) {\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref) {\n          var _ref2 = (0, _slicedToArray3.default)(_ref, 2),\n            k = _ref2[0],\n            v = _ref2[1];\n          return [k, v.where(other, op)];\n        })));\n      } else if (Array.isArray(other) || other instanceof _series2.default || other instanceof _immutable2.default.List) {\n        if ((Array.isArray(other) || other instanceof _series2.default) && other.length !== this.length) throw new Error('Array or Series must be same length as DataFrame');\n        if (other instanceof _immutable2.default.List && other.size !== this.length) throw new Error('Immutable List must be same size as DataFrame');\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref3) {\n          var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),\n            k = _ref4[0],\n            v = _ref4[1];\n          return [k, v.where(other, op)];\n        })));\n      } else if (other instanceof DataFrame) {\n        if (!other.shape.equals(this.shape)) throw new Error('DataFrame must have the same shape');\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref5, idx) {\n          var _ref6 = (0, _slicedToArray3.default)(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n          return [k, v.where(other.get(other.columns.get(idx)), op)];\n        })));\n      }\n      throw new Error('Unsupported comparison value, or non-matching lengths');\n    }\n  }, {\n    key: 'eq',\n    value: function eq(other) {\n      return this.where(other, function (a, b) {\n        return a === b;\n      });\n    }\n  }, {\n    key: 'gt',\n    value: function gt(other) {\n      return this.where(other, function (a, b) {\n        return a > b;\n      });\n    }\n  }, {\n    key: 'gte',\n    value: function gte(other) {\n      return this.where(other, function (a, b) {\n        return a >= b;\n      });\n    }\n  }, {\n    key: 'lt',\n    value: function lt(other) {\n      return this.where(other, function (a, b) {\n        return a < b;\n      });\n    }\n  }, {\n    key: 'lte',\n    value: function lte(other) {\n      return this.where(other, function (a, b) {\n        return a <= b;\n      });\n    }\n  }, {\n    key: 'merge',\n    value: function merge(df, on) {\n      var how = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'inner';\n      return mergeDataFrame(this, df, on, how);\n    }\n  }, {\n    key: 'to_csv',\n    value: function to_csv() {\n      var _this7 = this;\n      var csvString = '';\n      this.columns.forEach(function (k) {\n        csvString += k + ',';\n      });\n      csvString += '\\r\\n';\n      var updateString = function updateString(idx) {\n        var s = '';\n        _this7.columns.forEach(function (k) {\n          s += _this7.get(k).iloc(idx) + ',';\n        });\n        return s;\n      };\n      for (var idx = 0; idx < this.length; idx += 1) {\n        csvString += updateString(idx);\n        csvString += '\\r\\n';\n      }\n      return csvString;\n    }\n  }, {\n    key: 'to_excel',\n    value: function to_excel(excel_writer) {\n      var sheetName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Sheet1';\n      var download = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var kwargs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        index: true\n      };\n      throw new Error('to_excel not yet implemented');\n    }\n  }, {\n    key: 'to_json',\n    value: function to_json() {\n      var _this8 = this;\n      var kwargs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        orient: 'columns'\n      };\n      var ALLOWED_ORIENT = ['records', 'split', 'index', 'values', 'columns'];\n      var orient = 'columns';\n      if (typeof kwargs.orient !== 'undefined') {\n        if (ALLOWED_ORIENT.indexOf(kwargs.orient) < 0) throw new TypeError('orient must be in ' + ALLOWED_ORIENT.toString());\n        orient = kwargs.orient;\n      }\n      var json = void 0;\n      switch (orient) {\n        case 'records':\n          return this.values.map(function (row) {\n            var rowObj = {};\n            row.forEach(function (val, idx) {\n              rowObj[_this8.columns.get(idx)] = val;\n            });\n            return rowObj;\n          }).toArray();\n        case 'split':\n          return {\n            index: this.index.toArray(),\n            columns: this.columns.toArray(),\n            values: this.values.toJS()\n          };\n        case 'index':\n          json = {};\n          this.values.forEach(function (row, idx) {\n            var rowObj = {};\n            row.forEach(function (val, idx2) {\n              rowObj[_this8.columns.get(idx2)] = val;\n            });\n            json[_this8.index.get(idx)] = rowObj;\n          });\n          return json;\n        case 'values':\n          return this.values.toJS();\n        case 'columns':\n          json = {};\n          this.columns.forEach(function (c) {\n            json[c] = _this8.get(c).to_json({\n              orient: 'index'\n            });\n          });\n          return json;\n        default:\n          throw new TypeError('orient must be in ' + ALLOWED_ORIENT.toString());\n      }\n    }\n  }, {\n    key: 'sum',\n    value: function sum() {\n      var _this9 = this;\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this9.get(k).sum();\n        }), {\n          index: this.columns.toArray()\n        });\n      } else if (axis === 1) {\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this9.values.get(idx).reduce(function (s, k) {\n            return s + k;\n          }, 0);\n        }).toList(), {\n          index: this.index\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'mean',\n    value: function mean() {\n      var _this10 = this;\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this10.get(k).mean();\n        }), {\n          index: this.columns.toArray()\n        });\n      } else if (axis === 1) {\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this10.values.get(idx).reduce(function (s, k) {\n            return s + k / _this10.columns.size;\n          }, 0);\n        }).toList(), {\n          index: this.index\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'std',\n    value: function std() {\n      var _this11 = this;\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this11.get(k).std();\n        }), {\n          index: this.columns.toArray()\n        });\n      } else if (axis === 1) {\n        return this.variance(axis).map(function (v) {\n          return Math.sqrt(v);\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'variance',\n    value: function variance() {\n      var _this12 = this;\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this12.get(k).variance();\n        }), {\n          index: this.columns.toArray()\n        });\n      } else if (axis === 1) {\n        var means = this.mean(axis).values;\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this12.values.get(idx).reduce(function (s, k) {\n            var diff = k - means.get(idx);\n            return s + diff * diff / (_this12.columns.size - 1);\n          }, 0);\n        }).toArray(), {\n          index: this.index\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: '_pairwiseDataFrame',\n    value: function _pairwiseDataFrame(func) {\n      var valArray = [];\n      for (var idx1 = 0; idx1 < this.columns.size; idx1 += 1) {\n        valArray.push({});\n        var ds1 = this.get(this.columns.get(idx1));\n        for (var idx2 = idx1; idx2 < this.columns.size; idx2 += 1) {\n          var col2 = this.columns.get(idx2);\n          var ds2 = this.get(col2);\n          valArray[idx1][col2] = func(ds1, ds2);\n        }\n      }\n      for (var _idx = 0; _idx < this.columns.size; _idx += 1) {\n        var col1 = this.columns.get(_idx);\n        for (var _idx2 = _idx + 1; _idx2 < this.columns.size; _idx2 += 1) {\n          var _col = this.columns.get(_idx2);\n          valArray[_idx2][col1] = valArray[_idx][_col];\n        }\n      }\n      return new DataFrame(valArray, {\n        index: this.columns.toList()\n      });\n    }\n  }, {\n    key: 'cov',\n    value: function cov() {\n      return this._pairwiseDataFrame(function (ds1, ds2) {\n        return ds1.cov(ds2);\n      });\n    }\n  }, {\n    key: 'corr',\n    value: function corr() {\n      var corrFunc = function corrFunc(ds1, ds2) {\n        return ds1.values === ds2.values ? 1 : ds1.corr(ds2);\n      };\n      return this._pairwiseDataFrame(corrFunc);\n    }\n  }, {\n    key: 'diff',\n    value: function diff() {\n      var _this13 = this;\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k) {\n          return [k, _this13._data.get(k).diff(periods)];\n        })), {\n          index: this.index\n        });\n      } else if (axis === 1) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k, idx) {\n          if (idx < periods) return [k, new _series2.default(_immutable2.default.Repeat(null, _this13.length).toList(), {\n            name: k,\n            index: _this13.index\n          })];\n          var compareCol = _this13.get(_this13.columns.get(idx - periods));\n          return [k, _this13.get(k).map(function (v, vIdx) {\n            return v - compareCol.iloc(vIdx);\n          })];\n        })), {\n          index: this.index\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'pct_change',\n    value: function pct_change() {\n      var _this14 = this;\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k) {\n          return [k, _this14._data.get(k).pct_change(periods)];\n        })), {\n          index: this.index\n        });\n      } else if (axis === 1) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k, idx) {\n          if (idx < periods) return [k, new _series2.default(_immutable2.default.Repeat(null, _this14.length).toList(), {\n            name: k,\n            index: _this14.index\n          })];\n          var compareCol = _this14.get(_this14.columns.get(idx - periods));\n          return [k, _this14.get(k).map(function (v, vIdx) {\n            return v / compareCol.iloc(vIdx) - 1;\n          })];\n        })), {\n          index: this.index\n        });\n      }\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'filter',\n    value: function filter(iterBool) {\n      if (!Array.isArray(iterBool) && !(iterBool instanceof _immutable2.default.List) && !(iterBool instanceof _series2.default)) throw new Error('filter must be an Array, List, or Series');\n      if (Array.isArray(iterBool) && iterBool.length !== this.length) throw new Error('Array must be of equal length to DataFrame');else if (iterBool instanceof _immutable2.default.List && iterBool.size !== this.length) throw new Error('List must be of equal length to DataFrame');else if (iterBool instanceof _series2.default && iterBool.length !== this.length) throw new Error('Series must be of equal length to DataFrame');\n      return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref7) {\n        var _ref8 = (0, _slicedToArray3.default)(_ref7, 2),\n          k = _ref8[0],\n          v = _ref8[1];\n        return [k, v.filter(iterBool)];\n      })));\n    }\n  }, {\n    key: 'pivot',\n    value: function pivot(index, columns, values) {\n      var _this15 = this;\n      var uniqueVals = _immutable2.default.Map({});\n      var uniqueCols = _immutable2.default.List([]);\n      this.index.forEach(function (v, idx) {\n        var idxVal = _this15.get(index).iloc(idx);\n        var colVal = _this15.get(columns).iloc(idx);\n        if (uniqueVals.hasIn([idxVal, colVal])) throw new Error('pivot index and column must be unique');\n        var val = _this15.get(values).iloc(idx);\n        uniqueVals = uniqueVals.setIn([idxVal, colVal], val);\n        if (!uniqueCols.has(colVal)) uniqueCols = uniqueCols.push(colVal);\n      });\n      var sortedIndex = uniqueVals.keySeq().sort().toArray();\n      var sortedColumns = uniqueCols.sort();\n      var data = _immutable2.default.OrderedMap(sortedColumns.map(function (col) {\n        return [col, new _series2.default(sortedIndex.map(function (idx) {\n          var val = uniqueVals.getIn([idx, col]);\n          return typeof val === 'undefined' ? null : val;\n        }), {\n          name: col,\n          index: sortedIndex\n        })];\n      }));\n      return new DataFrame(data, {\n        index: sortedIndex\n      });\n    }\n  }, {\n    key: 'pivot_table',\n    value: function pivot_table(index, columns, values) {\n      var aggfunc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'sum';\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: '_cumulativeHelper',\n    value: function _cumulativeHelper() {\n      var _this16 = this;\n      var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils.OP_CUMSUM;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n          return [c, _this16.get(c)._cumulativeHelper(operation)];\n        })), this.kwargs);\n      } else if (axis === 1) {\n        return new DataFrame(this.values.map(function (row) {\n          return (0, _utils.generateCumulativeFunc)(operation)(row);\n        }), this.kwargs);\n      }\n      throw new Error('invalid axis');\n    }\n  }, {\n    key: 'cumsum',\n    value: function cumsum() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this._cumulativeHelper(_utils.OP_CUMSUM, axis);\n    }\n  }, {\n    key: 'cummul',\n    value: function cummul() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this._cumulativeHelper(_utils.OP_CUMMUL, axis);\n    }\n  }, {\n    key: 'cummax',\n    value: function cummax() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this._cumulativeHelper(_utils.OP_CUMMAX, axis);\n    }\n  }, {\n    key: 'cummin',\n    value: function cummin() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return this._cumulativeHelper(_utils.OP_CUMMIN, axis);\n    }\n  }, {\n    key: 'rename',\n    value: function rename(_ref9) {\n      var _this17 = this;\n      var columns = _ref9.columns;\n      return new DataFrame(_immutable2.default.OrderedMap(this.columns.map(function (prevCol) {\n        var nextCol = columns.get(prevCol);\n        if (typeof nextCol === 'undefined') return [prevCol, _this17._data.get(prevCol)];\n        return [nextCol, _this17._data.get(prevCol).rename(nextCol)];\n      })), {\n        index: this.index\n      });\n    }\n  }, {\n    key: 'append',\n    value: function append(other) {\n      var ignore_index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _concatDataFrame([this, other], {\n        ignore_index: ignore_index\n      });\n    }\n  }, {\n    key: 'transpose',\n    value: function transpose() {\n      var _this18 = this;\n      return new DataFrame(_immutable2.default.OrderedMap(this.index.map(function (index, idx) {\n        return [index, new _series2.default(_this18.values.get(idx), {\n          index: _this18.columns.toList()\n        })];\n      })));\n    }\n  }, {\n    key: 'kwargs',\n    get: function get() {\n      return {\n        index: this.index,\n        columns: this.columns\n      };\n    }\n  }, {\n    key: 'values',\n    get: function get() {\n      var _this19 = this;\n      if (this._values instanceof _immutable2.default.List) return (0, _get3.default)(DataFrame.prototype.__proto__ || Object.getPrototypeOf(DataFrame.prototype), 'values', this);\n      var valuesList = _immutable2.default.List([]);\n      var _loop = function _loop(idx) {\n        valuesList = valuesList.concat([_immutable2.default.List(_this19.columns.map(function (k) {\n          return _this19._data.get(k).iloc(idx);\n        }))]);\n      };\n      for (var idx = 0; idx < this.length; idx += 1) {\n        _loop(idx);\n      }\n      this._values = valuesList;\n      return (0, _get3.default)(DataFrame.prototype.__proto__ || Object.getPrototypeOf(DataFrame.prototype), 'values', this);\n    }\n  }, {\n    key: 'columns',\n    get: function get() {\n      return this._get_axis(1);\n    },\n    set: function set(columns) {\n      var _this20 = this;\n      if (!Array.isArray(columns) || columns.length !== this.columns.size) throw new Error('Columns must be array of same dimension');\n      var nextData = {};\n      columns.forEach(function (k, idx) {\n        var prevColumn = _this20.columns.get(idx);\n        var prevSeries = _this20.get(prevColumn);\n        nextData[k] = prevSeries.rename(k);\n      });\n      this._data = _immutable2.default.Map(nextData);\n      this.set_axis(1, _immutable2.default.Seq(columns));\n    }\n  }, {\n    key: 'index',\n    get: function get() {\n      return this._get_axis(0);\n    },\n    set: function set(index) {\n      var _this21 = this;\n      this.set_axis(0, (0, _utils.parseIndex)(index, this._data.get(this.columns.get(0)).values));\n      this._data.mapEntries(function (_ref10) {\n        var _ref11 = (0, _slicedToArray3.default)(_ref10, 2),\n          k = _ref11[0],\n          v = _ref11[1];\n        v.index = _this21.index;\n      });\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      var _this22 = this;\n      return Math.max.apply(Math, [0].concat((0, _toConsumableArray3.default)(this.columns.map(function (k) {\n        return _this22.get(k).length;\n      }).toArray())));\n    }\n  }]);\n  return DataFrame;\n}(_generic2.default);\nexports.default = DataFrame;\nvar innerMerge = function innerMerge(df1, df2, on) {\n  var data = [];\n  var cols1 = (0, _utils.nonMergeColumns)(df1.columns, on);\n  var cols2 = (0, _utils.nonMergeColumns)(df2.columns, on);\n  var intersectCols = (0, _utils.intersectingColumns)(cols1, cols2);\n  intersectCols.count();\n  var cols1Rename = cols1.map(function (k) {\n    return intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n  });\n  var cols2Rename = cols2.map(function (k) {\n    return intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n  try {\n    var _loop2 = function _loop2() {\n      var _step$value = (0, _slicedToArray3.default)(_step.value, 2),\n        row1 = _step$value[0],\n        _1 = _step$value[1];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        var _loop3 = function _loop3() {\n          var _step2$value = (0, _slicedToArray3.default)(_step2.value, 2),\n            row2 = _step2$value[0],\n            _2 = _step2$value[1];\n          var match = true;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n          try {\n            for (var _iterator3 = on[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var c = _step3.value;\n              if (row1.get(c) !== row2.get(c)) {\n                match = false;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n          if (match) {\n            var rowData = {};\n            on.forEach(function (k) {\n              rowData[k] = row1.get(k);\n            });\n            cols1.forEach(function (k, idx) {\n              rowData[cols1Rename.get(idx)] = row1.get(k);\n            });\n            cols2.forEach(function (k, idx) {\n              rowData[cols2Rename.get(idx)] = row2.get(k);\n            });\n            data.push(rowData);\n          }\n        };\n        for (var _iterator2 = df2.iterrows()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop3();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    };\n    for (var _iterator = df1.iterrows()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop2();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n  return new DataFrame(data);\n};\nvar outerMerge = function outerMerge(df1, df2, on) {\n  var data = [];\n  var cols1 = (0, _utils.nonMergeColumns)(df1.columns, on);\n  var cols2 = (0, _utils.nonMergeColumns)(df2.columns, on);\n  var intersectCols = (0, _utils.intersectingColumns)(cols1, cols2);\n  intersectCols.count();\n  var matched1 = new Array(df1.length).fill(false);\n  var matched2 = new Array(df2.length).fill(false);\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n  try {\n    var _loop4 = function _loop4() {\n      var _step4$value = (0, _slicedToArray3.default)(_step4.value, 2),\n        row1 = _step4$value[0],\n        idx_1 = _step4$value[1];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n      try {\n        var _loop5 = function _loop5() {\n          var _step5$value = (0, _slicedToArray3.default)(_step5.value, 2),\n            row2 = _step5$value[0],\n            idx_2 = _step5$value[1];\n          var match = true;\n          var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n          try {\n            for (var _iterator6 = on[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var c = _step6.value;\n              if (row1.get(c) !== row2.get(c)) {\n                match = false;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                _iterator6.return();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n          var rowData = {};\n          on.forEach(function (k) {\n            rowData[k] = row1.get(k);\n          });\n          cols1.forEach(function (k) {\n            var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n            rowData[nextColName] = row1.get(k);\n          });\n          if (match) {\n            cols2.forEach(function (k) {\n              var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n              rowData[nextColName] = row2.get(k);\n            });\n            data.push(rowData);\n            matched1[idx_1] = true;\n            matched2[idx_2] = true;\n          }\n        };\n        for (var _iterator5 = df2.iterrows()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          _loop5();\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    };\n    for (var _iterator4 = df1.iterrows()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop4();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n  matched1.forEach(function (m, idx) {\n    if (!m) {\n      var rowData = {};\n      on.forEach(function (k) {\n        rowData[k] = df1.get(k).iloc(idx);\n      });\n      cols1.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n        rowData[nextColName] = df1.get(k).iloc(idx);\n      });\n      cols2.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n        rowData[nextColName] = null;\n      });\n      data.push(rowData);\n    }\n  });\n  matched2.forEach(function (m, idx) {\n    if (!m) {\n      var rowData = {};\n      on.forEach(function (k) {\n        rowData[k] = df2.get(k).iloc(idx);\n      });\n      cols1.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n        rowData[nextColName] = null;\n      });\n      cols2.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n        rowData[nextColName] = df2.get(k).iloc(idx);\n      });\n      data.push(rowData);\n    }\n  });\n  return new DataFrame(data);\n};\nvar mergeDataFrame = exports.mergeDataFrame = function mergeDataFrame(df1, df2, on) {\n  var how = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'inner';\n  var mergeOn = void 0;\n  if (typeof on === 'undefined') {\n    mergeOn = df1.columns.filter(function (c1) {\n      return df2.columns.filter(function (c2) {\n        return c1 === c2;\n      }).size > 0;\n    });\n    if (mergeOn.size === 0) throw new Error('No common keys');\n  } else {\n    on.forEach(function (col) {\n      if (!df1.columnExists(col) || !df2.columnExists(col)) throw new Error('KeyError: ' + col + ' not found');\n    });\n    mergeOn = on;\n  }\n  switch (how) {\n    case 'inner':\n      return innerMerge(df1, df2, mergeOn);\n    case 'outer':\n      return outerMerge(df1, df2, mergeOn);\n    default:\n      throw new Error('MergeError: ' + how + ' not a supported merge type');\n  }\n};\nvar _concatDataFrame = exports._concatDataFrame = function _concatDataFrame(objs, kwargs) {\n  if (!(objs instanceof _immutable2.default.List || Array.isArray(objs))) throw new Error('objs must be List or Array');\n  if (objs instanceof _immutable2.default.List && objs.filter(function (frame) {\n    return frame instanceof DataFrame;\n  }).size !== objs.size) throw new Error('Objects must all be DataFrame');else if (Array.isArray(objs) && objs.filter(function (frame) {\n    return frame instanceof DataFrame;\n  }).length !== objs.length) throw new Error('Objects must all be DataFrame');\n  if (Array.isArray(objs) && objs.length === 1) return objs[0];else if (objs instanceof _immutable2.default.List && objs.size === 1) return objs.get(0);\n  var seriesOrderedMap = _immutable2.default.OrderedMap({});\n  if (kwargs.axis === 1) {\n    objs.forEach(function (df) {\n      df.columns.forEach(function (column) {\n        var columnExists = seriesOrderedMap.has(column);\n        seriesOrderedMap = seriesOrderedMap.set(columnExists ? column + '.x' : column, columnExists ? df.get(column).rename(column + '.x') : df.get(column));\n      });\n    });\n  } else {\n    objs.forEach(function (df) {\n      var lenSeriesInMap = seriesOrderedMap.keySeq().size === 0 ? 0 : seriesOrderedMap.first().length;\n      var nextLength = df.length + lenSeriesInMap;\n      seriesOrderedMap = _immutable2.default.OrderedMap(seriesOrderedMap.entrySeq().map(function (_ref12) {\n        var _ref13 = (0, _slicedToArray3.default)(_ref12, 2),\n          column = _ref13[0],\n          series = _ref13[1];\n        if (df.columnExists(column)) return [column, (0, _series._concatSeries)([series, df.get(column)], kwargs)];\n        return [column, (0, _series._concatSeries)([series, new _series2.default(_immutable2.default.Repeat(NaN, df.length).toList(), {\n          index: df.index\n        })], kwargs)];\n      })).merge(_immutable2.default.OrderedMap(df.columns.filter(function (column) {\n        return !seriesOrderedMap.has(column);\n      }).map(function (column) {\n        return [column, lenSeriesInMap === 0 ? df.get(column) : (0, _series._concatSeries)([new _series2.default(_immutable2.default.Repeat(NaN, nextLength)), df.get(column)], kwargs)];\n      })));\n    });\n  }\n  return new DataFrame(seriesOrderedMap);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_concatDataFrame","mergeDataFrame","undefined","_toConsumableArray2","require","_toConsumableArray3","_interopRequireDefault","_slicedToArray2","_slicedToArray3","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_get2","_get3","_inherits2","_inherits3","_typeof2","_typeof3","_immutable","_immutable2","_exceptions","_generic","_generic2","_series","_series2","_utils","obj","__esModule","default","parseArrayToSeriesMap","array","index","dataMap","Map","forEach","el","keySeq","k","has","set","get","push","List","of","keys","name","DataFrame","_NDFrame","data","kwargs","arguments","length","_this","__proto__","getPrototypeOf","call","Array","isArray","set_axis","parseIndex","_data","OrderedMap","map","Error","copy","columns","Seq","Range","size","toList","_values","c","colIdx","row","_setup_axes","key","toString","_this2","string","headerRow","repeat","stringUpdate","idx","s","iloc","Symbol","iterator","_this3","next","done","values","iterrows","enumerate","column","series","TypeError","reset_index","_this4","args","drop","indexName","columnExists","i","rowIdx","_this5","shape","getCol","slice","toArray","_getCol","head","n","tail","_assertColumnExists","col","indexOf","_this6","where","other","op","mapEntries","_ref","_ref2","v","_ref3","_ref4","equals","_ref5","_ref6","eq","a","b","gt","gte","lt","lte","merge","df","on","how","to_csv","_this7","csvString","updateString","to_excel","excel_writer","sheetName","download","to_json","_this8","orient","ALLOWED_ORIENT","json","rowObj","val","toJS","idx2","sum","_this9","axis","reduce","InvalidAxisError","mean","_this10","std","_this11","variance","Math","sqrt","_this12","means","diff","_pairwiseDataFrame","func","valArray","idx1","ds1","col2","ds2","_idx","col1","_idx2","_col","cov","corr","corrFunc","_this13","periods","Number","isInteger","Repeat","compareCol","vIdx","pct_change","_this14","filter","iterBool","_ref7","_ref8","pivot","_this15","uniqueVals","uniqueCols","idxVal","colVal","hasIn","setIn","sortedIndex","sort","sortedColumns","getIn","pivot_table","aggfunc","_cumulativeHelper","_this16","operation","OP_CUMSUM","generateCumulativeFunc","cumsum","cummul","OP_CUMMUL","cummax","OP_CUMMAX","cummin","OP_CUMMIN","rename","_ref9","_this17","prevCol","nextCol","append","ignore_index","transpose","_this18","_this19","prototype","valuesList","_loop","concat","_get_axis","_this20","nextData","prevColumn","prevSeries","_this21","_ref10","_ref11","_this22","max","apply","innerMerge","df1","df2","cols1","nonMergeColumns","cols2","intersectCols","intersectingColumns","count","cols1Rename","cols2Rename","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_loop2","_step$value","_step","row1","_1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_loop3","_step2$value","_step2","row2","_2","match","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","err","return","rowData","_iterator2","_iterator","outerMerge","matched1","fill","matched2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_loop4","_step4$value","_step4","idx_1","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_loop5","_step5$value","_step5","idx_2","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","nextColName","_iterator5","_iterator4","m","mergeOn","c1","c2","objs","frame","seriesOrderedMap","lenSeriesInMap","first","nextLength","entrySeq","_ref12","_ref13","_concatSeries","NaN"],"sources":["C:/algoTrading/letzalgo/react/node_modules/pandas-js/dist/core/frame.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._concatDataFrame = exports.mergeDataFrame = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = require('babel-runtime/helpers/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _exceptions = require('./exceptions');\n\nvar _generic = require('./generic');\n\nvar _generic2 = _interopRequireDefault(_generic);\n\nvar _series = require('./series');\n\nvar _series2 = _interopRequireDefault(_series);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parseArrayToSeriesMap = function parseArrayToSeriesMap(array, index) {\n  var dataMap = _immutable2.default.Map({});\n\n  array.forEach(function (el) {\n    if (el instanceof _immutable2.default.Map) {\n      el.keySeq().forEach(function (k) {\n        if (dataMap.has(k)) {\n          dataMap = dataMap.set(k, dataMap.get(k).push(el.get(k)));\n        } else {\n          dataMap = dataMap.set(k, _immutable2.default.List.of(el.get(k)));\n        }\n      });\n    } else if ((typeof el === 'undefined' ? 'undefined' : (0, _typeof3.default)(el)) === 'object') {\n      Object.keys(el).forEach(function (k) {\n        if (dataMap.has(k)) {\n          dataMap = dataMap.set(k, dataMap.get(k).push(el[k]));\n        } else {\n          dataMap = dataMap.set(k, _immutable2.default.List.of(el[k]));\n        }\n      });\n    }\n  });\n\n  dataMap.keySeq().forEach(function (k) {\n    dataMap = dataMap.set(k, new _series2.default(dataMap.get(k), { name: k, index: index }));\n  });\n\n  return _immutable2.default.Map(dataMap);\n};\n\nvar DataFrame = function (_NDFrame) {\n  (0, _inherits3.default)(DataFrame, _NDFrame);\n\n  function DataFrame(data) {\n    var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck3.default)(this, DataFrame);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (DataFrame.__proto__ || Object.getPrototypeOf(DataFrame)).call(this, data, kwargs));\n\n    if (Array.isArray(data)) {\n      _this.set_axis(0, (0, _utils.parseIndex)(kwargs.index, _immutable2.default.List(data)));\n      _this._data = parseArrayToSeriesMap(data, _this.index);\n      _this.set_axis(1, _this._data.keySeq());\n    } else if (data instanceof _immutable2.default.Map) {\n      _this._data = _immutable2.default.OrderedMap(data.keySeq().map(function (k) {\n        if (data instanceof _immutable2.default.Map && !(data.get(k) instanceof _series2.default)) throw new Error('Map must have [column, series] key-value pairs');\n\n        if (data instanceof _immutable2.default.Map) return [k, data.get(k).copy()];\n\n        throw new Error('Data is not Map');\n      }));\n      _this.set_axis(1, _this._data.keySeq());\n      _this.set_axis(0, _this._data.get(_this.columns.get(0)).index);\n    } else if (data instanceof _immutable2.default.List) {\n      var columns = void 0;\n      if (Array.isArray(kwargs.columns) || kwargs.columns instanceof _immutable2.default.Seq) columns = _immutable2.default.List(kwargs.columns);else if (kwargs.columns instanceof _immutable2.default.List) columns = kwargs.columns;else if (typeof kwargs.columns === 'undefined') columns = _immutable2.default.Range(0, data.get(0).size).toList();else throw new Error('Invalid columns');\n\n      _this._values = data;\n      _this._data = _immutable2.default.OrderedMap(columns.map(function (c, colIdx) {\n        return [c, new _series2.default(data.map(function (row) {\n          return row.get(colIdx);\n        }), { index: kwargs.index })];\n      }));\n\n      _this.set_axis(1, _this._data.keySeq());\n      _this.set_axis(0, _this._data.get(_this.columns.get(0)).index);\n    } else if (typeof data === 'undefined') {\n      _this._data = _immutable2.default.Map({});\n      _this.set_axis(0, _immutable2.default.List.of());\n      _this.set_axis(1, _immutable2.default.Seq.of());\n    }\n\n    _this._setup_axes(_immutable2.default.List.of(0, 1));\n    return _this;\n  }\n\n  (0, _createClass3.default)(DataFrame, [{\n    key: 'toString',\n    value: function toString() {\n      var _this2 = this;\n\n      var string = '\\t|';\n      this.columns.forEach(function (k) {\n        string += '  ' + k + '  |';\n      });\n      var headerRow = '-'.repeat(string.length);\n\n      string += '\\n' + headerRow + '\\n';\n\n      var stringUpdate = function stringUpdate(idx) {\n        var s = '';\n        _this2.columns.forEach(function (k) {\n          s += '  ' + _this2._data.get(k).iloc(idx) + '  |';\n        });\n        return s;\n      };\n\n      for (var idx = 0; idx < this.length; idx += 1) {\n        string += this.index.get(idx) + '\\t|';\n        string += stringUpdate(idx);\n        string += '\\n';\n      }\n\n      return string;\n    }\n  }, {\n    key: 'copy',\n    value: function copy() {\n      return new DataFrame(this._data, { index: this.index });\n    }\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      var _this3 = this;\n\n      var index = -1;\n\n      return {\n        next: function next() {\n          index += 1;\n          var done = !(index >= 0 && index < _this3.length);\n          var value = done ? undefined : _immutable2.default.Map(_this3.columns.map(function (k, idx) {\n            return [k, _this3.values.get(index).get(idx)];\n          }));\n          return { value: value, done: done };\n        }\n      };\n    }\n  }, {\n    key: 'iterrows',\n    value: function iterrows() {\n      return (0, _utils.enumerate)(this);\n    }\n  }, {\n    key: 'set',\n    value: function set(column, series) {\n      if (series instanceof _series2.default) return new DataFrame(this._data.set(column, series), this.kwargs);else if (series instanceof _immutable2.default.List || Array.isArray(series)) return new DataFrame(this._data.set(column, new _series2.default(series, { index: this.index, name: column })), this.kwargs);\n      throw new TypeError('series must be a Series!');\n    }\n  }, {\n    key: 'reset_index',\n    value: function reset_index() {\n      var _this4 = this;\n\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { drop: false };\n\n      if (typeof args.drop !== 'undefined' && typeof args.drop !== 'boolean') throw new TypeError('drop must be a boolean');\n      var drop = typeof args.drop === 'undefined' ? false : args.drop;\n\n      var indexName = 'index';\n      if (this.columnExists('index')) {\n        var i = 0;\n        while (this.columnExists('level_' + i)) {\n          i += 1;\n        }\n        indexName = 'level_' + i;\n      }\n\n      var data = _immutable2.default.Map(this.columns.map(function (c) {\n        return [c, new _series2.default(_this4.get(c).values)];\n      }));\n      if (!args.drop) data = data.set(indexName, new _series2.default(this.index));\n\n      return new DataFrame(data);\n    }\n  }, {\n    key: 'iloc',\n    value: function iloc(rowIdx, colIdx) {\n      var _this5 = this;\n\n      if (typeof rowIdx === 'number') {\n        if (typeof colIdx === 'number') {\n          if (colIdx < 0 || colIdx >= this.shape[1]) throw new Error('colIdx out of bounds');\n\n          var getCol = this.columns.get(colIdx);\n          return new DataFrame(_immutable2.default.Map([[getCol, this.get(getCol).iloc(rowIdx, rowIdx + 1)]]), { index: this.index.slice(rowIdx, rowIdx + 1) });\n        } else if (Array.isArray(colIdx)) {\n          if (colIdx.length !== 2) throw new Error('colIdx must be length 2 (start and end positions)');\n          if (colIdx[1] <= colIdx[0]) throw new Error('colIdx end position cannot be less than or equal tostart position');\n          if (colIdx[0] < 0 || colIdx[1] > this.shape[1]) throw new Error('colIdx position out of bounds');\n\n          return new DataFrame(_immutable2.default.Map(_immutable2.default.Range(colIdx[0], colIdx[1]).map(function (idx) {\n            var getCol = _this5.columns.get(idx);\n\n            return [getCol, _this5.get(getCol).iloc(rowIdx, rowIdx + 1)];\n          }).toArray()), { index: this.index.slice(rowIdx, rowIdx + 1) });\n        } else if (typeof colIdx === 'undefined') {\n          return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n            return [c, _this5.get(c).iloc(rowIdx, rowIdx + 1)];\n          }).toArray()), { index: this.index.slice(rowIdx, rowIdx + 1) });\n        }\n\n        throw new TypeError('colIdx must be either integer or Array of integers');\n      } else if (Array.isArray(rowIdx)) {\n        if (typeof colIdx === 'number') {\n          if (colIdx < 0 || colIdx >= this.shape[1]) throw new Error('colIdx out of bounds');\n\n          var _getCol = this.columns.get(colIdx);\n          return new DataFrame(_immutable2.default.Map([[_getCol, this.get(_getCol).iloc(rowIdx[0], rowIdx[1])]]), { index: this.index.slice(rowIdx[0], rowIdx[1]) });\n        } else if (Array.isArray(colIdx)) {\n          if (colIdx.length !== 2) throw new Error('colIdx must be length 2 (start and end positions)');\n          if (colIdx[1] <= colIdx[0]) throw new Error('colIdx end position cannot be less than or equal tostart position');\n          if (colIdx[0] < 0 || colIdx[1] > this.shape[1]) throw new Error('colIdx position out of bounds');\n\n          return new DataFrame(_immutable2.default.Map(_immutable2.default.Range(colIdx[0], colIdx[1]).map(function (idx) {\n            var getCol = _this5.columns.get(idx);\n\n            return [getCol, _this5.get(getCol).iloc(rowIdx[0], rowIdx[1])];\n          }).toArray()), { index: this.index.slice(rowIdx[0], rowIdx[1]) });\n        } else if (typeof colIdx === 'undefined') {\n          return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n            return [c, _this5.get(c).iloc(rowIdx[0], rowIdx[1])];\n          }).toArray()), { index: this.index.slice(rowIdx[0], rowIdx[1]) });\n        }\n\n        throw new TypeError('colIdx must be either integer or Array of integers');\n      }\n\n      throw new TypeError('rowIdx must be either integer or Array of integers');\n    }\n  }, {\n    key: 'head',\n    value: function head() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n      return this.iloc([0, n]);\n    }\n  }, {\n    key: 'tail',\n    value: function tail() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n      return this.iloc([this.length - n, this.length]);\n    }\n  }, {\n    key: '_assertColumnExists',\n    value: function _assertColumnExists(col) {\n      if (!this.columnExists(col)) throw new Error('Column ' + col + ' not in DataFrame');\n    }\n  }, {\n    key: 'columnExists',\n    value: function columnExists(col) {\n      return this.columns.indexOf(col) >= 0;\n    }\n  }, {\n    key: 'get',\n    value: function get(columns) {\n      var _this6 = this;\n\n      if ((typeof columns === 'string' || typeof columns === 'number') && this.columnExists(columns)) return this._data.get(columns);else if (Array.isArray(columns) || columns instanceof _immutable2.default.List || columns instanceof _immutable2.default.Seq) {\n        columns.forEach(function (c) {\n          if (!_this6.columnExists(c)) throw new Error('KeyError: ' + c + ' not found');\n        });\n        return new DataFrame(_immutable2.default.Map(columns.map(function (c) {\n          return [c, _this6.get(c)];\n        })), this.kwargs);\n      }\n      throw new Error('KeyError: ' + columns + ' not found');\n    }\n  }, {\n    key: 'where',\n    value: function where(other, op) {\n      if (!Array.isArray(other) && !(other instanceof _immutable2.default.List) && !(other instanceof _series2.default) && !(other instanceof DataFrame)) {\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref) {\n          var _ref2 = (0, _slicedToArray3.default)(_ref, 2),\n              k = _ref2[0],\n              v = _ref2[1];\n\n          return [k, v.where(other, op)];\n        })));\n      } else if (Array.isArray(other) || other instanceof _series2.default || other instanceof _immutable2.default.List) {\n        if ((Array.isArray(other) || other instanceof _series2.default) && other.length !== this.length) throw new Error('Array or Series must be same length as DataFrame');\n        if (other instanceof _immutable2.default.List && other.size !== this.length) throw new Error('Immutable List must be same size as DataFrame');\n\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref3) {\n          var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),\n              k = _ref4[0],\n              v = _ref4[1];\n\n          return [k, v.where(other, op)];\n        })));\n      } else if (other instanceof DataFrame) {\n        if (!other.shape.equals(this.shape)) throw new Error('DataFrame must have the same shape');\n\n        return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref5, idx) {\n          var _ref6 = (0, _slicedToArray3.default)(_ref5, 2),\n              k = _ref6[0],\n              v = _ref6[1];\n\n          return [k, v.where(other.get(other.columns.get(idx)), op)];\n        })));\n      }\n\n      throw new Error('Unsupported comparison value, or non-matching lengths');\n    }\n  }, {\n    key: 'eq',\n    value: function eq(other) {\n      return this.where(other, function (a, b) {\n        return a === b;\n      });\n    }\n  }, {\n    key: 'gt',\n    value: function gt(other) {\n      return this.where(other, function (a, b) {\n        return a > b;\n      });\n    }\n  }, {\n    key: 'gte',\n    value: function gte(other) {\n      return this.where(other, function (a, b) {\n        return a >= b;\n      });\n    }\n  }, {\n    key: 'lt',\n    value: function lt(other) {\n      return this.where(other, function (a, b) {\n        return a < b;\n      });\n    }\n  }, {\n    key: 'lte',\n    value: function lte(other) {\n      return this.where(other, function (a, b) {\n        return a <= b;\n      });\n    }\n  }, {\n    key: 'merge',\n    value: function merge(df, on) {\n      var how = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'inner';\n\n      return mergeDataFrame(this, df, on, how);\n    }\n  }, {\n    key: 'to_csv',\n    value: function to_csv() {\n      var _this7 = this;\n\n      var csvString = '';\n      this.columns.forEach(function (k) {\n        csvString += k + ',';\n      });\n      csvString += '\\r\\n';\n\n      var updateString = function updateString(idx) {\n        var s = '';\n        _this7.columns.forEach(function (k) {\n          s += _this7.get(k).iloc(idx) + ',';\n        });\n        return s;\n      };\n      for (var idx = 0; idx < this.length; idx += 1) {\n        csvString += updateString(idx);\n        csvString += '\\r\\n';\n      }\n\n      return csvString;\n    }\n  }, {\n    key: 'to_excel',\n    value: function to_excel(excel_writer) {\n      var sheetName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Sheet1';\n      var download = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var kwargs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { index: true };\n\n      throw new Error('to_excel not yet implemented');\n    }\n  }, {\n    key: 'to_json',\n    value: function to_json() {\n      var _this8 = this;\n\n      var kwargs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { orient: 'columns' };\n\n      var ALLOWED_ORIENT = ['records', 'split', 'index', 'values', 'columns'];\n      var orient = 'columns';\n\n      if (typeof kwargs.orient !== 'undefined') {\n        if (ALLOWED_ORIENT.indexOf(kwargs.orient) < 0) throw new TypeError('orient must be in ' + ALLOWED_ORIENT.toString());\n        orient = kwargs.orient;\n      }\n\n      var json = void 0;\n      switch (orient) {\n        case 'records':\n          return this.values.map(function (row) {\n            var rowObj = {};\n            row.forEach(function (val, idx) {\n              rowObj[_this8.columns.get(idx)] = val;\n            });\n            return rowObj;\n          }).toArray();\n        case 'split':\n          return {\n            index: this.index.toArray(),\n            columns: this.columns.toArray(),\n            values: this.values.toJS()\n          };\n        case 'index':\n          json = {};\n          this.values.forEach(function (row, idx) {\n            var rowObj = {};\n            row.forEach(function (val, idx2) {\n              rowObj[_this8.columns.get(idx2)] = val;\n            });\n            json[_this8.index.get(idx)] = rowObj;\n          });\n          return json;\n        case 'values':\n          return this.values.toJS();\n        case 'columns':\n          json = {};\n          this.columns.forEach(function (c) {\n            json[c] = _this8.get(c).to_json({ orient: 'index' });\n          });\n          return json;\n        default:\n          throw new TypeError('orient must be in ' + ALLOWED_ORIENT.toString());\n      }\n    }\n  }, {\n    key: 'sum',\n    value: function sum() {\n      var _this9 = this;\n\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this9.get(k).sum();\n        }), { index: this.columns.toArray() });\n      } else if (axis === 1) {\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this9.values.get(idx).reduce(function (s, k) {\n            return s + k;\n          }, 0);\n        }).toList(), { index: this.index });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'mean',\n    value: function mean() {\n      var _this10 = this;\n\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this10.get(k).mean();\n        }), { index: this.columns.toArray() });\n      } else if (axis === 1) {\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this10.values.get(idx).reduce(function (s, k) {\n            return s + k / _this10.columns.size;\n          }, 0);\n        }).toList(), { index: this.index });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'std',\n    value: function std() {\n      var _this11 = this;\n\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this11.get(k).std();\n        }), { index: this.columns.toArray() });\n      } else if (axis === 1) {\n        return this.variance(axis).map(function (v) {\n          return Math.sqrt(v);\n        });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'variance',\n    value: function variance() {\n      var _this12 = this;\n\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (axis === 0) {\n        return new _series2.default(this.columns.toArray().map(function (k) {\n          return _this12.get(k).variance();\n        }), { index: this.columns.toArray() });\n      } else if (axis === 1) {\n        var means = this.mean(axis).values;\n        return new _series2.default(_immutable2.default.Range(0, this.length).map(function (idx) {\n          return _this12.values.get(idx).reduce(function (s, k) {\n            var diff = k - means.get(idx);\n            return s + diff * diff / (_this12.columns.size - 1);\n          }, 0);\n        }).toArray(), { index: this.index });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: '_pairwiseDataFrame',\n    value: function _pairwiseDataFrame(func) {\n      var valArray = [];\n\n      for (var idx1 = 0; idx1 < this.columns.size; idx1 += 1) {\n        valArray.push({});\n        var ds1 = this.get(this.columns.get(idx1));\n\n        for (var idx2 = idx1; idx2 < this.columns.size; idx2 += 1) {\n          var col2 = this.columns.get(idx2);\n          var ds2 = this.get(col2);\n          valArray[idx1][col2] = func(ds1, ds2);\n        }\n      }\n\n      for (var _idx = 0; _idx < this.columns.size; _idx += 1) {\n        var col1 = this.columns.get(_idx);\n        for (var _idx2 = _idx + 1; _idx2 < this.columns.size; _idx2 += 1) {\n          var _col = this.columns.get(_idx2);\n          valArray[_idx2][col1] = valArray[_idx][_col];\n        }\n      }\n\n      return new DataFrame(valArray, { index: this.columns.toList() });\n    }\n  }, {\n    key: 'cov',\n    value: function cov() {\n      return this._pairwiseDataFrame(function (ds1, ds2) {\n        return ds1.cov(ds2);\n      });\n    }\n  }, {\n    key: 'corr',\n    value: function corr() {\n      var corrFunc = function corrFunc(ds1, ds2) {\n        return ds1.values === ds2.values ? 1 : ds1.corr(ds2);\n      };\n      return this._pairwiseDataFrame(corrFunc);\n    }\n  }, {\n    key: 'diff',\n    value: function diff() {\n      var _this13 = this;\n\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k) {\n          return [k, _this13._data.get(k).diff(periods)];\n        })), { index: this.index });\n      } else if (axis === 1) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k, idx) {\n          if (idx < periods) return [k, new _series2.default(_immutable2.default.Repeat(null, _this13.length).toList(), { name: k, index: _this13.index })];\n          var compareCol = _this13.get(_this13.columns.get(idx - periods));\n          return [k, _this13.get(k).map(function (v, vIdx) {\n            return v - compareCol.iloc(vIdx);\n          })];\n        })), { index: this.index });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'pct_change',\n    value: function pct_change() {\n      var _this14 = this;\n\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k) {\n          return [k, _this14._data.get(k).pct_change(periods)];\n        })), { index: this.index });\n      } else if (axis === 1) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (k, idx) {\n          if (idx < periods) return [k, new _series2.default(_immutable2.default.Repeat(null, _this14.length).toList(), { name: k, index: _this14.index })];\n          var compareCol = _this14.get(_this14.columns.get(idx - periods));\n\n          return [k, _this14.get(k).map(function (v, vIdx) {\n            return v / compareCol.iloc(vIdx) - 1;\n          })];\n        })), { index: this.index });\n      }\n\n      throw new _exceptions.InvalidAxisError();\n    }\n  }, {\n    key: 'filter',\n    value: function filter(iterBool) {\n      if (!Array.isArray(iterBool) && !(iterBool instanceof _immutable2.default.List) && !(iterBool instanceof _series2.default)) throw new Error('filter must be an Array, List, or Series');\n\n      if (Array.isArray(iterBool) && iterBool.length !== this.length) throw new Error('Array must be of equal length to DataFrame');else if (iterBool instanceof _immutable2.default.List && iterBool.size !== this.length) throw new Error('List must be of equal length to DataFrame');else if (iterBool instanceof _series2.default && iterBool.length !== this.length) throw new Error('Series must be of equal length to DataFrame');\n\n      return new DataFrame(_immutable2.default.Map(this._data.mapEntries(function (_ref7) {\n        var _ref8 = (0, _slicedToArray3.default)(_ref7, 2),\n            k = _ref8[0],\n            v = _ref8[1];\n\n        return [k, v.filter(iterBool)];\n      })));\n    }\n  }, {\n    key: 'pivot',\n    value: function pivot(index, columns, values) {\n      var _this15 = this;\n\n      var uniqueVals = _immutable2.default.Map({});\n      var uniqueCols = _immutable2.default.List([]);\n\n      this.index.forEach(function (v, idx) {\n        var idxVal = _this15.get(index).iloc(idx);\n        var colVal = _this15.get(columns).iloc(idx);\n\n        if (uniqueVals.hasIn([idxVal, colVal])) throw new Error('pivot index and column must be unique');\n\n        var val = _this15.get(values).iloc(idx);\n\n        uniqueVals = uniqueVals.setIn([idxVal, colVal], val);\n        if (!uniqueCols.has(colVal)) uniqueCols = uniqueCols.push(colVal);\n      });\n      var sortedIndex = uniqueVals.keySeq().sort().toArray();\n      var sortedColumns = uniqueCols.sort();\n\n      var data = _immutable2.default.OrderedMap(sortedColumns.map(function (col) {\n        return [col, new _series2.default(sortedIndex.map(function (idx) {\n          var val = uniqueVals.getIn([idx, col]);\n          return typeof val === 'undefined' ? null : val;\n        }), { name: col, index: sortedIndex })];\n      }));\n\n      return new DataFrame(data, { index: sortedIndex });\n    }\n  }, {\n    key: 'pivot_table',\n    value: function pivot_table(index, columns, values) {\n      var aggfunc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'sum';\n\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: '_cumulativeHelper',\n    value: function _cumulativeHelper() {\n      var _this16 = this;\n\n      var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils.OP_CUMSUM;\n      var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (axis === 0) {\n        return new DataFrame(_immutable2.default.Map(this.columns.map(function (c) {\n          return [c, _this16.get(c)._cumulativeHelper(operation)];\n        })), this.kwargs);\n      } else if (axis === 1) {\n        return new DataFrame(this.values.map(function (row) {\n          return (0, _utils.generateCumulativeFunc)(operation)(row);\n        }), this.kwargs);\n      }\n      throw new Error('invalid axis');\n    }\n  }, {\n    key: 'cumsum',\n    value: function cumsum() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return this._cumulativeHelper(_utils.OP_CUMSUM, axis);\n    }\n  }, {\n    key: 'cummul',\n    value: function cummul() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return this._cumulativeHelper(_utils.OP_CUMMUL, axis);\n    }\n  }, {\n    key: 'cummax',\n    value: function cummax() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return this._cumulativeHelper(_utils.OP_CUMMAX, axis);\n    }\n  }, {\n    key: 'cummin',\n    value: function cummin() {\n      var axis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return this._cumulativeHelper(_utils.OP_CUMMIN, axis);\n    }\n  }, {\n    key: 'rename',\n    value: function rename(_ref9) {\n      var _this17 = this;\n\n      var columns = _ref9.columns;\n\n      return new DataFrame(_immutable2.default.OrderedMap(this.columns.map(function (prevCol) {\n        var nextCol = columns.get(prevCol);\n        if (typeof nextCol === 'undefined') return [prevCol, _this17._data.get(prevCol)];\n        return [nextCol, _this17._data.get(prevCol).rename(nextCol)];\n      })), { index: this.index });\n    }\n  }, {\n    key: 'append',\n    value: function append(other) {\n      var ignore_index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return _concatDataFrame([this, other], { ignore_index: ignore_index });\n    }\n  }, {\n    key: 'transpose',\n    value: function transpose() {\n      var _this18 = this;\n\n      return new DataFrame(_immutable2.default.OrderedMap(this.index.map(function (index, idx) {\n        return [index, new _series2.default(_this18.values.get(idx), { index: _this18.columns.toList() })];\n      })));\n    }\n  }, {\n    key: 'kwargs',\n    get: function get() {\n      return { index: this.index, columns: this.columns };\n    }\n  }, {\n    key: 'values',\n    get: function get() {\n      var _this19 = this;\n\n      if (this._values instanceof _immutable2.default.List) return (0, _get3.default)(DataFrame.prototype.__proto__ || Object.getPrototypeOf(DataFrame.prototype), 'values', this);\n\n      var valuesList = _immutable2.default.List([]);\n\n      var _loop = function _loop(idx) {\n        valuesList = valuesList.concat([_immutable2.default.List(_this19.columns.map(function (k) {\n          return _this19._data.get(k).iloc(idx);\n        }))]);\n      };\n\n      for (var idx = 0; idx < this.length; idx += 1) {\n        _loop(idx);\n      }\n      this._values = valuesList;\n\n      return (0, _get3.default)(DataFrame.prototype.__proto__ || Object.getPrototypeOf(DataFrame.prototype), 'values', this);\n    }\n  }, {\n    key: 'columns',\n    get: function get() {\n      return this._get_axis(1);\n    },\n    set: function set(columns) {\n      var _this20 = this;\n\n      if (!Array.isArray(columns) || columns.length !== this.columns.size) throw new Error('Columns must be array of same dimension');\n\n      var nextData = {};\n      columns.forEach(function (k, idx) {\n        var prevColumn = _this20.columns.get(idx);\n        var prevSeries = _this20.get(prevColumn);\n\n        nextData[k] = prevSeries.rename(k);\n      });\n\n      this._data = _immutable2.default.Map(nextData);\n      this.set_axis(1, _immutable2.default.Seq(columns));\n    }\n  }, {\n    key: 'index',\n    get: function get() {\n      return this._get_axis(0);\n    },\n    set: function set(index) {\n      var _this21 = this;\n\n      this.set_axis(0, (0, _utils.parseIndex)(index, this._data.get(this.columns.get(0)).values));\n\n      this._data.mapEntries(function (_ref10) {\n        var _ref11 = (0, _slicedToArray3.default)(_ref10, 2),\n            k = _ref11[0],\n            v = _ref11[1];\n\n        v.index = _this21.index;\n      });\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      var _this22 = this;\n\n      return Math.max.apply(Math, [0].concat((0, _toConsumableArray3.default)(this.columns.map(function (k) {\n        return _this22.get(k).length;\n      }).toArray())));\n    }\n  }]);\n  return DataFrame;\n}(_generic2.default);\n\nexports.default = DataFrame;\n\n\nvar innerMerge = function innerMerge(df1, df2, on) {\n  var data = [];\n\n  var cols1 = (0, _utils.nonMergeColumns)(df1.columns, on);\n  var cols2 = (0, _utils.nonMergeColumns)(df2.columns, on);\n\n  var intersectCols = (0, _utils.intersectingColumns)(cols1, cols2);\n  intersectCols.count();\n\n  var cols1Rename = cols1.map(function (k) {\n    return intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n  });\n\n  var cols2Rename = cols2.map(function (k) {\n    return intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n  });\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop2 = function _loop2() {\n      var _step$value = (0, _slicedToArray3.default)(_step.value, 2),\n          row1 = _step$value[0],\n          _1 = _step$value[1];\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop3 = function _loop3() {\n          var _step2$value = (0, _slicedToArray3.default)(_step2.value, 2),\n              row2 = _step2$value[0],\n              _2 = _step2$value[1];\n\n          var match = true;var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = on[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var c = _step3.value;\n\n              if (row1.get(c) !== row2.get(c)) {\n                match = false;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          if (match) {\n            var rowData = {};\n\n            on.forEach(function (k) {\n              rowData[k] = row1.get(k);\n            });\n\n            cols1.forEach(function (k, idx) {\n              rowData[cols1Rename.get(idx)] = row1.get(k);\n            });\n\n            cols2.forEach(function (k, idx) {\n              rowData[cols2Rename.get(idx)] = row2.get(k);\n            });\n\n            data.push(rowData);\n          }\n        };\n\n        for (var _iterator2 = df2.iterrows()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop3();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    };\n\n    for (var _iterator = df1.iterrows()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop2();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return new DataFrame(data);\n};\n\nvar outerMerge = function outerMerge(df1, df2, on) {\n  var data = [];\n\n  var cols1 = (0, _utils.nonMergeColumns)(df1.columns, on);\n  var cols2 = (0, _utils.nonMergeColumns)(df2.columns, on);\n\n  var intersectCols = (0, _utils.intersectingColumns)(cols1, cols2);\n  intersectCols.count();\n\n  var matched1 = new Array(df1.length).fill(false);\n  var matched2 = new Array(df2.length).fill(false);\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    var _loop4 = function _loop4() {\n      var _step4$value = (0, _slicedToArray3.default)(_step4.value, 2),\n          row1 = _step4$value[0],\n          idx_1 = _step4$value[1];\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        var _loop5 = function _loop5() {\n          var _step5$value = (0, _slicedToArray3.default)(_step5.value, 2),\n              row2 = _step5$value[0],\n              idx_2 = _step5$value[1];\n\n          var match = true;var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n\n          try {\n            for (var _iterator6 = on[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var c = _step6.value;\n\n              if (row1.get(c) !== row2.get(c)) {\n                match = false;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                _iterator6.return();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n\n          var rowData = {};\n\n          on.forEach(function (k) {\n            rowData[k] = row1.get(k);\n          });\n\n          cols1.forEach(function (k) {\n            var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n            rowData[nextColName] = row1.get(k);\n          });\n\n          if (match) {\n            cols2.forEach(function (k) {\n              var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n              rowData[nextColName] = row2.get(k);\n            });\n            data.push(rowData);\n            matched1[idx_1] = true;\n            matched2[idx_2] = true;\n          }\n        };\n\n        for (var _iterator5 = df2.iterrows()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          _loop5();\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    };\n\n    for (var _iterator4 = df1.iterrows()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop4();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  matched1.forEach(function (m, idx) {\n    if (!m) {\n      var rowData = {};\n      on.forEach(function (k) {\n        rowData[k] = df1.get(k).iloc(idx);\n      });\n\n      cols1.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n        rowData[nextColName] = df1.get(k).iloc(idx);\n      });\n\n      cols2.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n        rowData[nextColName] = null;\n      });\n      data.push(rowData);\n    }\n  });\n\n  matched2.forEach(function (m, idx) {\n    if (!m) {\n      var rowData = {};\n      on.forEach(function (k) {\n        rowData[k] = df2.get(k).iloc(idx);\n      });\n\n      cols1.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_x' : k;\n        rowData[nextColName] = null;\n      });\n\n      cols2.forEach(function (k) {\n        var nextColName = intersectCols.size > 0 && intersectCols.indexOf(k) >= 0 ? k + '_y' : k;\n        rowData[nextColName] = df2.get(k).iloc(idx);\n      });\n      data.push(rowData);\n    }\n  });\n\n  return new DataFrame(data);\n};\n\nvar mergeDataFrame = exports.mergeDataFrame = function mergeDataFrame(df1, df2, on) {\n  var how = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'inner';\n\n  var mergeOn = void 0;\n  if (typeof on === 'undefined') {\n    mergeOn = df1.columns.filter(function (c1) {\n      return df2.columns.filter(function (c2) {\n        return c1 === c2;\n      }).size > 0;\n    });\n    if (mergeOn.size === 0) throw new Error('No common keys');\n  } else {\n    on.forEach(function (col) {\n      if (!df1.columnExists(col) || !df2.columnExists(col)) throw new Error('KeyError: ' + col + ' not found');\n    });\n    mergeOn = on;\n  }\n\n  switch (how) {\n    case 'inner':\n      return innerMerge(df1, df2, mergeOn);\n    case 'outer':\n      return outerMerge(df1, df2, mergeOn);\n    default:\n      throw new Error('MergeError: ' + how + ' not a supported merge type');\n  }\n};\n\nvar _concatDataFrame = exports._concatDataFrame = function _concatDataFrame(objs, kwargs) {\n  if (!(objs instanceof _immutable2.default.List || Array.isArray(objs))) throw new Error('objs must be List or Array');\n\n  if (objs instanceof _immutable2.default.List && objs.filter(function (frame) {\n    return frame instanceof DataFrame;\n  }).size !== objs.size) throw new Error('Objects must all be DataFrame');else if (Array.isArray(objs) && objs.filter(function (frame) {\n    return frame instanceof DataFrame;\n  }).length !== objs.length) throw new Error('Objects must all be DataFrame');\n\n  if (Array.isArray(objs) && objs.length === 1) return objs[0];else if (objs instanceof _immutable2.default.List && objs.size === 1) return objs.get(0);\n\n  var seriesOrderedMap = _immutable2.default.OrderedMap({});\n  if (kwargs.axis === 1) {\n    objs.forEach(function (df) {\n      df.columns.forEach(function (column) {\n        var columnExists = seriesOrderedMap.has(column);\n        seriesOrderedMap = seriesOrderedMap.set(columnExists ? column + '.x' : column, columnExists ? df.get(column).rename(column + '.x') : df.get(column));\n      });\n    });\n  } else {\n    objs.forEach(function (df) {\n      var lenSeriesInMap = seriesOrderedMap.keySeq().size === 0 ? 0 : seriesOrderedMap.first().length;\n      var nextLength = df.length + lenSeriesInMap;\n\n      seriesOrderedMap = _immutable2.default.OrderedMap(seriesOrderedMap.entrySeq().map(function (_ref12) {\n        var _ref13 = (0, _slicedToArray3.default)(_ref12, 2),\n            column = _ref13[0],\n            series = _ref13[1];\n\n        if (df.columnExists(column)) return [column, (0, _series._concatSeries)([series, df.get(column)], kwargs)];\n        return [column, (0, _series._concatSeries)([series, new _series2.default(_immutable2.default.Repeat(NaN, df.length).toList(), { index: df.index })], kwargs)];\n      })).merge(_immutable2.default.OrderedMap(df.columns.filter(function (column) {\n        return !seriesOrderedMap.has(column);\n      }).map(function (column) {\n        return [column, lenSeriesInMap === 0 ? df.get(column) : (0, _series._concatSeries)([new _series2.default(_immutable2.default.Repeat(NaN, nextLength)), df.get(column)], kwargs)];\n      })));\n    });\n  }\n\n  return new DataFrame(seriesOrderedMap);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}