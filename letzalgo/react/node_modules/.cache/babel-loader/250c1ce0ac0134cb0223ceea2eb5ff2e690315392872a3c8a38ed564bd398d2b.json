{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._concatSeries = undefined;\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _createClass2 = require('babel-runtime/helpers/createClass');\nvar _createClass3 = _interopRequireDefault(_createClass2);\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _get2 = require('babel-runtime/helpers/get');\nvar _get3 = _interopRequireDefault(_get2);\nvar _inherits2 = require('babel-runtime/helpers/inherits');\nvar _inherits3 = _interopRequireDefault(_inherits2);\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _generic = require('./generic');\nvar _generic2 = _interopRequireDefault(_generic);\nvar _utils = require('./utils');\nvar _dtype = require('./dtype');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar Series = function (_NDFrame) {\n  (0, _inherits3.default)(Series, _NDFrame);\n  function Series(data) {\n    var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck3.default)(this, Series);\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Series.__proto__ || Object.getPrototypeOf(Series)).call(this, data, kwargs));\n    if (Array.isArray(data)) {\n      _this._values = _immutable2.default.List(data);\n      _this._dtype = (0, _dtype.arrayToDType)(data);\n    } else if (data instanceof _immutable2.default.List) {\n      _this._values = data;\n      _this._dtype = (0, _dtype.arrayToDType)(data);\n    } else {\n      _this._values = _immutable2.default.List.of(data);\n      _this._dtype = (0, _dtype.arrayToDType)([data]);\n    }\n    _this._name = typeof kwargs.name !== 'undefined' ? kwargs.name : '';\n    _this.set_axis(0, (0, _utils.parseIndex)(kwargs.index, _this.values));\n    _this._setup_axes(_immutable2.default.List.of(0));\n    _this._sort_ascending = _this._sort_ascending.bind(_this);\n    _this._sort_descending = _this._sort_descending.bind(_this);\n    return _this;\n  }\n  (0, _createClass3.default)(Series, [{\n    key: Symbol.iterator,\n    value: function value() {\n      var values = this.values;\n      var index = -1;\n      return {\n        next: function next() {\n          index += 1;\n          return {\n            value: values.get(index),\n            done: !(index >= 0 && index < values.size)\n          };\n        }\n      };\n    }\n  }, {\n    key: 'map',\n    value: function map(func) {\n      return new Series(this.values.map(function (val, idx) {\n        return func(val, idx);\n      }), {\n        name: this.name,\n        index: this.index\n      });\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(func) {\n      this.values.forEach(function (val, idx) {\n        return func(val, idx);\n      });\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this2 = this;\n      var vals = this.iloc(0, 10).values;\n      var valString = '';\n      vals.forEach(function (v, idx) {\n        valString += _this2.index.get(idx) + '\\t' + v + '\\n';\n      });\n      return valString + 'Name: ' + this.name + ', dtype: ' + this.dtype;\n    }\n  }, {\n    key: 'head',\n    value: function head() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      return this.iloc(0, n);\n    }\n  }, {\n    key: 'tail',\n    value: function tail() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      return this.iloc(this.length - n, this.length);\n    }\n  }, {\n    key: 'copy',\n    value: function copy() {\n      return new Series(this.values, {\n        index: this.index,\n        name: this.name\n      });\n    }\n  }, {\n    key: 'astype',\n    value: function astype(nextType) {\n      if (!(nextType instanceof _dtype.DType)) throw new Error('Next type must be a DType');\n      if (nextType.dtype === this.dtype) return this;\n      switch (nextType.dtype) {\n        case 'int':\n          {\n            if (this.dtype.dtype === 'object') throw new Error('Cannot convert object to int');\n            var kwargs = {\n              name: this.name,\n              index: this.index\n            };\n            return new Series(this.values.map(function (v) {\n              return Math.floor(v);\n            }), kwargs);\n          }\n        case 'float':\n          {\n            if (this.dtype.dtype === 'object') throw new Error('Cannot convert object to float');\n            var _kwargs = {\n              name: this.name,\n              index: this.index\n            };\n            return new Series(this.values.map(function (v) {\n              return parseFloat(v);\n            }), _kwargs);\n          }\n        default:\n          throw new Error('Invalid dtype ' + nextType);\n      }\n    }\n  }, {\n    key: 'iloc',\n    value: function iloc(startVal, endVal) {\n      if (typeof endVal === 'undefined') return this.values.get(startVal);\n      var name = this.kwargs.name;\n      var index = this.index.slice(startVal, endVal);\n      return new Series(this.values.slice(startVal, endVal), {\n        name: name,\n        index: index\n      });\n    }\n  }, {\n    key: 'sum',\n    value: function sum() {\n      return (0, _utils.sum)(this.values);\n    }\n  }, {\n    key: 'mean',\n    value: function mean() {\n      return this.sum() / this.length;\n    }\n  }, {\n    key: 'median',\n    value: function median() {\n      var sortedVals = this.values.sort();\n      if (this.length % 2 === 1) return sortedVals.get(Math.floor(this.length / 2));\n      var halfLength = this.length / 2;\n      return (sortedVals.get(halfLength - 1) + sortedVals.get(halfLength)) / 2;\n    }\n  }, {\n    key: 'variance',\n    value: function variance() {\n      var _this3 = this;\n      var mean = this.mean();\n      return this.values.reduce(function (s, v) {\n        var diff = v - mean;\n        return s + diff * diff / (_this3.length - 1);\n      }, 0);\n    }\n  }, {\n    key: 'std',\n    value: function std() {\n      return Math.sqrt(this.variance());\n    }\n  }, {\n    key: 'abs',\n    value: function abs() {\n      if (['bool', 'string', 'object'].indexOf(this.dtype.dtype) >= 0) return this.copy();\n      return new Series(this.values.map(function (v) {\n        return Math.abs(v);\n      }), {\n        name: this.name,\n        index: this.index\n      });\n    }\n  }, {\n    key: '_combineOp',\n    value: function _combineOp(other, op) {\n      var opName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      if (typeof other === 'number') return this.map(function (val) {\n        return op(val, other);\n      });else if (other instanceof Series) return this.map(function (val, idx) {\n        return op(val, other.iloc(idx));\n      });else if (Array.isArray(other)) return this.map(function (val, idx) {\n        return op(val, other[idx]);\n      });else if (other instanceof _immutable2.default.List) return this.map(function (val, idx) {\n        return op(val, other.get(idx));\n      });\n      throw new Error(opName + ' only supports numbers, Arrays, Immutable List and pandas.Series');\n    }\n  }, {\n    key: 'add',\n    value: function add(other) {\n      return this._combineOp(other, function (a, b) {\n        return a + b;\n      }, 'add');\n    }\n  }, {\n    key: 'sub',\n    value: function sub(other) {\n      return this._combineOp(other, function (a, b) {\n        return a - b;\n      }, 'sub');\n    }\n  }, {\n    key: 'mul',\n    value: function mul(other) {\n      return this._combineOp(other, function (a, b) {\n        return a * b;\n      });\n    }\n  }, {\n    key: 'multiply',\n    value: function multiply(other) {\n      return this.mul(other);\n    }\n  }, {\n    key: 'div',\n    value: function div(other) {\n      return this._combineOp(other, function (a, b) {\n        return a / b;\n      }, 'div');\n    }\n  }, {\n    key: 'divide',\n    value: function divide(other) {\n      return this.div(other);\n    }\n  }, {\n    key: 'cov',\n    value: function cov(ds) {\n      if (!(ds instanceof Series)) throw new Error('ds must be a Series');\n      if (ds.length !== this.length) throw new Error('Series must be of equal length');\n      var n = 0;\n      var mean1 = 0;\n      var mean2 = 0;\n      var m12 = 0;\n      this.values.forEach(function (v1, idx) {\n        n += 1;\n        var d1 = (v1 - mean1) / n;\n        mean1 += d1;\n        var d2 = (ds.values.get(idx) - mean2) / n;\n        mean2 += d2;\n        m12 += (n - 1) * d1 * d2 - m12 / n;\n      });\n      return n / (n - 1) * m12;\n    }\n  }, {\n    key: 'corr',\n    value: function corr(ds) {\n      if (!(ds instanceof Series)) throw new Error('ds must be a Series');\n      if (ds.length !== this.length) throw new Error('Series must be of equal length');\n      return this.cov(ds) / (this.std() * ds.std());\n    }\n  }, {\n    key: 'diff',\n    value: function diff() {\n      var _this4 = this;\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n      return new Series(_immutable2.default.Repeat(null, periods).toList().concat(_immutable2.default.Range(periods, this.length).map(function (idx) {\n        return _this4.values.get(idx) - _this4.values.get(idx - periods);\n      }).toList()), {\n        index: this.index,\n        name: this.name\n      });\n    }\n  }, {\n    key: 'pct_change',\n    value: function pct_change() {\n      var _this5 = this;\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n      return new Series(_immutable2.default.Repeat(null, periods).toList().concat(_immutable2.default.Range(periods, this.length).map(function (idx) {\n        return _this5.values.get(idx) / _this5.values.get(idx - periods) - 1;\n      }).toList()), {\n        index: this.index,\n        name: this.name\n      });\n    }\n  }, {\n    key: '_sort_ascending',\n    value: function _sort_ascending(valueA, valueB) {\n      var valA = this.iloc(valueA);\n      var valB = this.iloc(valueB);\n      if (valA < valB) return -1;else if (valA > valB) return 1;\n      return 0;\n    }\n  }, {\n    key: '_sort_descending',\n    value: function _sort_descending(valueA, valueB) {\n      var valA = this.iloc(valueA);\n      var valB = this.iloc(valueB);\n      if (valA > valB) return -1;else if (valA < valB) return 1;\n      return 0;\n    }\n  }, {\n    key: 'sort_values',\n    value: function sort_values() {\n      var _this6 = this;\n      var ascending = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var sortedIndex = ascending ? this.index.sort(this._sort_ascending) : this.index.sort(this._sort_descending);\n      return new Series(sortedIndex.map(function (i) {\n        return _this6.iloc(i);\n      }), {\n        name: this.name,\n        index: sortedIndex\n      });\n    }\n  }, {\n    key: 'round',\n    value: function round() {\n      var decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return new Series(this.values.map(function (v) {\n        return (0, _utils.round10)(v, -1 * decimals);\n      }));\n    }\n  }, {\n    key: '_alignSeries',\n    value: function _alignSeries(series) {\n      var _this7 = this;\n      var seriesAlignment = _immutable2.default.Map({});\n      this.index.forEach(function (idx1) {\n        if (!seriesAlignment.has(idx1)) {\n          seriesAlignment = seriesAlignment.set(idx1, _immutable2.default.Map({\n            first: _immutable2.default.List.of(_this7.iloc(idx1)),\n            second: _immutable2.default.List([])\n          }));\n        } else {\n          seriesAlignment = seriesAlignment.updateIn([idx1, 'first'], function (l) {\n            return l.concat(_this7.iloc(idx1));\n          });\n        }\n      });\n      series.index.forEach(function (idx2) {\n        if (!seriesAlignment.has(idx2)) {\n          seriesAlignment = seriesAlignment.set(idx2, _immutable2.default.Map({\n            first: _immutable2.default.List([]),\n            second: _immutable2.default.List.of(series.iloc(idx2))\n          }));\n        } else {\n          seriesAlignment = seriesAlignment.updateIn([idx2, 'second'], function (l) {\n            return l.concat(series.iloc(idx2));\n          });\n        }\n      });\n      return seriesAlignment;\n    }\n  }, {\n    key: 'where',\n    value: function where(other, op) {\n      var name = this.name;\n      var index = this.index;\n      var kwargs = {\n        name: name,\n        index: index\n      };\n      if (!Array.isArray(other) && !(other instanceof _immutable2.default.List) && !(other instanceof Series)) return new Series(this.values.map(function (v) {\n        return op(v, other);\n      }), kwargs);\n      if (Array.isArray(other)) {\n        if (other.length !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other[idx]);\n        }), kwargs);\n      } else if (other instanceof _immutable2.default.List) {\n        if (other.size !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other.get(idx));\n        }), kwargs);\n      } else if (other instanceof Series) {\n        if (other.length !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other.iloc(idx));\n        }), kwargs);\n      }\n      throw new Error('Must be scalar value, Array, Series, or Immutable.List');\n    }\n  }, {\n    key: 'eq',\n    value: function eq(other) {\n      return this.where(other, function (a, b) {\n        return a === b;\n      });\n    }\n  }, {\n    key: 'lt',\n    value: function lt(other) {\n      return this.where(other, function (a, b) {\n        return a < b;\n      });\n    }\n  }, {\n    key: 'lte',\n    value: function lte(other) {\n      return this.where(other, function (a, b) {\n        return a <= b;\n      });\n    }\n  }, {\n    key: 'gt',\n    value: function gt(other) {\n      return this.where(other, function (a, b) {\n        return a > b;\n      });\n    }\n  }, {\n    key: 'gte',\n    value: function gte(other) {\n      return this.where(other, function (a, b) {\n        return a >= b;\n      });\n    }\n  }, {\n    key: 'notnull',\n    value: function notnull() {\n      return this.where(null, function (a, b) {\n        return a !== b;\n      });\n    }\n  }, {\n    key: 'shift',\n    value: function shift() {\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      if (!Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods === 0) {\n        return this.copy();\n      } else if (periods < 0) {\n        var absPeriods = Math.abs(periods);\n        if (absPeriods > this.length) throw new Error('Periods greater than length of Series');\n        var _values = this.values.slice(absPeriods, this.length).concat(_immutable2.default.Repeat(null, absPeriods).toList());\n        return new Series(_values, {\n          name: this.name,\n          index: this.index\n        });\n      }\n      if (periods > this.length) throw new Error('Periods greater than length of Series');\n      var values = _immutable2.default.Repeat(null, periods).toList().concat(this.values.slice(0, this.length - periods));\n      return new Series(values, {\n        name: this.name,\n        index: this.index\n      });\n    }\n  }, {\n    key: 'unique',\n    value: function unique() {\n      return this.values.toSet().toList();\n    }\n  }, {\n    key: 'filter',\n    value: function filter(iterBool) {\n      var _this8 = this;\n      if (!Array.isArray(iterBool) && !(iterBool instanceof _immutable2.default.List) && !(iterBool instanceof Series)) throw new Error('filter must be an Array, List, or Series');\n      var valueIndexMap = {\n        values: [],\n        index: []\n      };\n      if (iterBool instanceof Series) iterBool.values.forEach(function (v, idx) {\n        if (v === true) {\n          valueIndexMap.values.push(_this8.values.get(idx));\n          valueIndexMap.index.push(_this8.index.get(idx));\n        }\n      });else {\n        iterBool.forEach(function (v, idx) {\n          if (v === true) {\n            valueIndexMap.values.push(_this8.values.get(idx));\n            valueIndexMap.index.push(_this8.index.get(idx));\n          }\n        });\n      }\n      return new Series(valueIndexMap.values, {\n        name: this.name,\n        index: valueIndexMap.index\n      });\n    }\n  }, {\n    key: '_cumulativeHelper',\n    value: function _cumulativeHelper() {\n      var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils.OP_CUMSUM;\n      return new Series((0, _utils.generateCumulativeFunc)(operation)(this.values), this.kwargs);\n    }\n  }, {\n    key: 'cumsum',\n    value: function cumsum() {\n      return this._cumulativeHelper(_utils.OP_CUMSUM);\n    }\n  }, {\n    key: 'cummul',\n    value: function cummul() {\n      return this._cumulativeHelper(_utils.OP_CUMMUL);\n    }\n  }, {\n    key: 'cummax',\n    value: function cummax() {\n      return this._cumulativeHelper(_utils.OP_CUMMAX);\n    }\n  }, {\n    key: 'cummin',\n    value: function cummin() {\n      return this._cumulativeHelper(_utils.OP_CUMMIN);\n    }\n  }, {\n    key: 'to_json',\n    value: function to_json() {\n      var _this9 = this;\n      var kwargs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        orient: 'index'\n      };\n      var ALLOWED_ORIENT = ['records', 'split', 'index'];\n      var orient = 'index';\n      if (typeof kwargs.orient !== 'undefined') {\n        if (ALLOWED_ORIENT.indexOf(kwargs.orient) < 0) throw new TypeError('orient must be in ' + ALLOWED_ORIENT);\n        orient = kwargs.orient;\n      }\n      var json = void 0;\n      switch (orient) {\n        case 'records':\n          return this.values.toArray();\n        case 'split':\n          return {\n            index: this.index.toArray(),\n            name: this.name,\n            values: this.values.toJS()\n          };\n        case 'index':\n          json = {};\n          this.values.forEach(function (v, idx) {\n            json[_this9.index.get(idx)] = v;\n          });\n          return json;\n        default:\n          throw new TypeError('orient must be in ' + ALLOWED_ORIENT);\n      }\n    }\n  }, {\n    key: 'rename',\n    value: function rename(name) {\n      return new Series(this._values, {\n        name: name,\n        index: this.index\n      });\n    }\n  }, {\n    key: 'append',\n    value: function append(other) {\n      var ignore_index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _concatSeries([this, other], {\n        ignore_index: ignore_index\n      });\n    }\n  }, {\n    key: 'kwargs',\n    get: function get() {\n      return {\n        name: this.name,\n        index: this.index\n      };\n    }\n  }, {\n    key: 'dtype',\n    get: function get() {\n      return this._dtype;\n    }\n  }, {\n    key: 'index',\n    get: function get() {\n      return this._get_axis(0);\n    },\n    set: function set(index) {\n      this.set_axis(0, (0, _utils.parseIndex)(index, this.values));\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.values.size;\n    }\n  }, {\n    key: 'values',\n    get: function get() {\n      return (0, _get3.default)(Series.prototype.__proto__ || Object.getPrototypeOf(Series.prototype), 'values', this);\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }]);\n  return Series;\n}(_generic2.default);\nexports.default = Series;\nvar _concatSeriesValues = function _concatSeriesValues(objs) {\n  var _Immutable$List;\n  return (_Immutable$List = _immutable2.default.List([])).concat.apply(_Immutable$List, (0, _toConsumableArray3.default)(objs.map(function (series) {\n    return series.values;\n  })));\n};\nvar _concatSeriesIndices = function _concatSeriesIndices(objs) {\n  var _Immutable$List2;\n  return (_Immutable$List2 = _immutable2.default.List([])).concat.apply(_Immutable$List2, (0, _toConsumableArray3.default)(objs.map(function (series) {\n    return series.index;\n  })));\n};\nvar _concatSeries = exports._concatSeries = function _concatSeries(objs, kwargs) {\n  if (objs instanceof _immutable2.default.List && objs.filter(function (series) {\n    return series instanceof Series;\n  }).size !== objs.size) throw new Error('Objects must all be Series');else if (Array.isArray(objs) && objs.filter(function (series) {\n    return series instanceof Series;\n  }).length !== objs.length) throw new Error('Objects must all be Series');\n  if (!kwargs.ignore_index) return new Series(_concatSeriesValues(objs), {\n    index: _concatSeriesIndices(objs)\n  });else if (kwargs.ignore_index) {\n    return new Series(_concatSeriesValues(objs), {\n      index: _immutable2.default.Range(0, objs.reduce(function (a, b) {\n        return a + b.length;\n      }, 0)).toList()\n    });\n  }\n  throw new Error('Not supported');\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_concatSeries","undefined","_toConsumableArray2","require","_toConsumableArray3","_interopRequireDefault","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_get2","_get3","_inherits2","_inherits3","_immutable","_immutable2","_generic","_generic2","_utils","_dtype","obj","__esModule","default","Series","_NDFrame","data","kwargs","arguments","length","_this","__proto__","getPrototypeOf","call","Array","isArray","_values","List","arrayToDType","of","_name","name","set_axis","parseIndex","index","values","_setup_axes","_sort_ascending","bind","_sort_descending","key","Symbol","iterator","next","get","done","size","map","func","val","idx","forEach","toString","_this2","vals","iloc","valString","v","dtype","head","n","tail","copy","astype","nextType","DType","Error","Math","floor","_kwargs","parseFloat","startVal","endVal","slice","sum","mean","median","sortedVals","sort","halfLength","variance","_this3","reduce","s","diff","std","sqrt","abs","indexOf","_combineOp","other","op","opName","add","a","b","sub","mul","multiply","div","divide","cov","ds","mean1","mean2","m12","v1","d1","d2","corr","_this4","periods","Number","isInteger","Repeat","toList","concat","Range","pct_change","_this5","valueA","valueB","valA","valB","sort_values","_this6","ascending","sortedIndex","i","round","decimals","round10","_alignSeries","series","_this7","seriesAlignment","Map","idx1","has","set","first","second","updateIn","l","idx2","where","eq","lt","lte","gt","gte","notnull","shift","absPeriods","unique","toSet","filter","iterBool","_this8","valueIndexMap","push","_cumulativeHelper","operation","OP_CUMSUM","generateCumulativeFunc","cumsum","cummul","OP_CUMMUL","cummax","OP_CUMMAX","cummin","OP_CUMMIN","to_json","_this9","orient","ALLOWED_ORIENT","TypeError","json","toArray","toJS","rename","append","ignore_index","_get_axis","prototype","_concatSeriesValues","objs","_Immutable$List","apply","_concatSeriesIndices","_Immutable$List2"],"sources":["C:/algoTrading/letzalgo/react/node_modules/pandas-js/dist/core/series.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._concatSeries = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = require('babel-runtime/helpers/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _generic = require('./generic');\n\nvar _generic2 = _interopRequireDefault(_generic);\n\nvar _utils = require('./utils');\n\nvar _dtype = require('./dtype');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Series = function (_NDFrame) {\n  (0, _inherits3.default)(Series, _NDFrame);\n\n  function Series(data) {\n    var kwargs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _classCallCheck3.default)(this, Series);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Series.__proto__ || Object.getPrototypeOf(Series)).call(this, data, kwargs));\n\n    if (Array.isArray(data)) {\n      _this._values = _immutable2.default.List(data);\n      _this._dtype = (0, _dtype.arrayToDType)(data);\n    } else if (data instanceof _immutable2.default.List) {\n      _this._values = data;\n      _this._dtype = (0, _dtype.arrayToDType)(data);\n    } else {\n      _this._values = _immutable2.default.List.of(data);\n      _this._dtype = (0, _dtype.arrayToDType)([data]);\n    }\n\n    _this._name = typeof kwargs.name !== 'undefined' ? kwargs.name : '';\n\n    _this.set_axis(0, (0, _utils.parseIndex)(kwargs.index, _this.values));\n    _this._setup_axes(_immutable2.default.List.of(0));\n\n    _this._sort_ascending = _this._sort_ascending.bind(_this);\n\n    _this._sort_descending = _this._sort_descending.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Series, [{\n    key: Symbol.iterator,\n    value: function value() {\n      var values = this.values;\n      var index = -1;\n\n      return {\n        next: function next() {\n          index += 1;\n          return { value: values.get(index), done: !(index >= 0 && index < values.size) };\n        }\n      };\n    }\n  }, {\n    key: 'map',\n    value: function map(func) {\n      return new Series(this.values.map(function (val, idx) {\n        return func(val, idx);\n      }), { name: this.name, index: this.index });\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(func) {\n      this.values.forEach(function (val, idx) {\n        return func(val, idx);\n      });\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this2 = this;\n\n      var vals = this.iloc(0, 10).values;\n\n      var valString = '';\n      vals.forEach(function (v, idx) {\n        valString += _this2.index.get(idx) + '\\t' + v + '\\n';\n      });\n\n      return valString + 'Name: ' + this.name + ', dtype: ' + this.dtype;\n    }\n  }, {\n    key: 'head',\n    value: function head() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n\n      return this.iloc(0, n);\n    }\n  }, {\n    key: 'tail',\n    value: function tail() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n\n      return this.iloc(this.length - n, this.length);\n    }\n  }, {\n    key: 'copy',\n    value: function copy() {\n      return new Series(this.values, { index: this.index, name: this.name });\n    }\n  }, {\n    key: 'astype',\n    value: function astype(nextType) {\n      if (!(nextType instanceof _dtype.DType)) throw new Error('Next type must be a DType');\n\n      if (nextType.dtype === this.dtype) return this;\n\n      switch (nextType.dtype) {\n        case 'int':\n          {\n            if (this.dtype.dtype === 'object') throw new Error('Cannot convert object to int');\n            var kwargs = { name: this.name, index: this.index };\n            return new Series(this.values.map(function (v) {\n              return Math.floor(v);\n            }), kwargs);\n          }\n        case 'float':\n          {\n            if (this.dtype.dtype === 'object') throw new Error('Cannot convert object to float');\n            var _kwargs = { name: this.name, index: this.index };\n            return new Series(this.values.map(function (v) {\n              return parseFloat(v);\n            }), _kwargs);\n          }\n        default:\n          throw new Error('Invalid dtype ' + nextType);\n      }\n    }\n  }, {\n    key: 'iloc',\n    value: function iloc(startVal, endVal) {\n      if (typeof endVal === 'undefined') return this.values.get(startVal);\n\n      var name = this.kwargs.name;\n\n      var index = this.index.slice(startVal, endVal);\n\n      return new Series(this.values.slice(startVal, endVal), { name: name, index: index });\n    }\n  }, {\n    key: 'sum',\n    value: function sum() {\n      return (0, _utils.sum)(this.values);\n    }\n  }, {\n    key: 'mean',\n    value: function mean() {\n      return this.sum() / this.length;\n    }\n  }, {\n    key: 'median',\n    value: function median() {\n      var sortedVals = this.values.sort();\n\n      if (this.length % 2 === 1) return sortedVals.get(Math.floor(this.length / 2));\n\n      var halfLength = this.length / 2;\n      return (sortedVals.get(halfLength - 1) + sortedVals.get(halfLength)) / 2;\n    }\n  }, {\n    key: 'variance',\n    value: function variance() {\n      var _this3 = this;\n\n      var mean = this.mean();\n\n      return this.values.reduce(function (s, v) {\n        var diff = v - mean;\n        return s + diff * diff / (_this3.length - 1);\n      }, 0);\n    }\n  }, {\n    key: 'std',\n    value: function std() {\n      return Math.sqrt(this.variance());\n    }\n  }, {\n    key: 'abs',\n    value: function abs() {\n      if (['bool', 'string', 'object'].indexOf(this.dtype.dtype) >= 0) return this.copy();\n\n      return new Series(this.values.map(function (v) {\n        return Math.abs(v);\n      }), { name: this.name, index: this.index });\n    }\n  }, {\n    key: '_combineOp',\n    value: function _combineOp(other, op) {\n      var opName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n      if (typeof other === 'number') return this.map(function (val) {\n        return op(val, other);\n      });else if (other instanceof Series) return this.map(function (val, idx) {\n        return op(val, other.iloc(idx));\n      });else if (Array.isArray(other)) return this.map(function (val, idx) {\n        return op(val, other[idx]);\n      });else if (other instanceof _immutable2.default.List) return this.map(function (val, idx) {\n        return op(val, other.get(idx));\n      });\n\n      throw new Error(opName + ' only supports numbers, Arrays, Immutable List and pandas.Series');\n    }\n  }, {\n    key: 'add',\n    value: function add(other) {\n      return this._combineOp(other, function (a, b) {\n        return a + b;\n      }, 'add');\n    }\n  }, {\n    key: 'sub',\n    value: function sub(other) {\n      return this._combineOp(other, function (a, b) {\n        return a - b;\n      }, 'sub');\n    }\n  }, {\n    key: 'mul',\n    value: function mul(other) {\n      return this._combineOp(other, function (a, b) {\n        return a * b;\n      });\n    }\n  }, {\n    key: 'multiply',\n    value: function multiply(other) {\n      return this.mul(other);\n    }\n  }, {\n    key: 'div',\n    value: function div(other) {\n      return this._combineOp(other, function (a, b) {\n        return a / b;\n      }, 'div');\n    }\n  }, {\n    key: 'divide',\n    value: function divide(other) {\n      return this.div(other);\n    }\n  }, {\n    key: 'cov',\n    value: function cov(ds) {\n      if (!(ds instanceof Series)) throw new Error('ds must be a Series');\n\n      if (ds.length !== this.length) throw new Error('Series must be of equal length');\n\n      var n = 0;\n      var mean1 = 0;\n      var mean2 = 0;\n      var m12 = 0;\n\n      this.values.forEach(function (v1, idx) {\n        n += 1;\n        var d1 = (v1 - mean1) / n;\n        mean1 += d1;\n        var d2 = (ds.values.get(idx) - mean2) / n;\n        mean2 += d2;\n\n        m12 += (n - 1) * d1 * d2 - m12 / n;\n      });\n\n      return n / (n - 1) * m12;\n    }\n  }, {\n    key: 'corr',\n    value: function corr(ds) {\n      if (!(ds instanceof Series)) throw new Error('ds must be a Series');\n\n      if (ds.length !== this.length) throw new Error('Series must be of equal length');\n\n      return this.cov(ds) / (this.std() * ds.std());\n    }\n  }, {\n    key: 'diff',\n    value: function diff() {\n      var _this4 = this;\n\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n\n      return new Series(_immutable2.default.Repeat(null, periods).toList().concat(_immutable2.default.Range(periods, this.length).map(function (idx) {\n        return _this4.values.get(idx) - _this4.values.get(idx - periods);\n      }).toList()), { index: this.index, name: this.name });\n    }\n  }, {\n    key: 'pct_change',\n    value: function pct_change() {\n      var _this5 = this;\n\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      if (typeof periods !== 'number' || !Number.isInteger(periods)) throw new Error('periods must be an integer');\n      if (periods <= 0) throw new Error('periods must be positive');\n\n      return new Series(_immutable2.default.Repeat(null, periods).toList().concat(_immutable2.default.Range(periods, this.length).map(function (idx) {\n        return _this5.values.get(idx) / _this5.values.get(idx - periods) - 1;\n      }).toList()), { index: this.index, name: this.name });\n    }\n  }, {\n    key: '_sort_ascending',\n    value: function _sort_ascending(valueA, valueB) {\n      var valA = this.iloc(valueA);\n      var valB = this.iloc(valueB);\n\n      if (valA < valB) return -1;else if (valA > valB) return 1;\n      return 0;\n    }\n  }, {\n    key: '_sort_descending',\n    value: function _sort_descending(valueA, valueB) {\n      var valA = this.iloc(valueA);\n      var valB = this.iloc(valueB);\n\n      if (valA > valB) return -1;else if (valA < valB) return 1;\n      return 0;\n    }\n  }, {\n    key: 'sort_values',\n    value: function sort_values() {\n      var _this6 = this;\n\n      var ascending = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var sortedIndex = ascending ? this.index.sort(this._sort_ascending) : this.index.sort(this._sort_descending);\n\n      return new Series(sortedIndex.map(function (i) {\n        return _this6.iloc(i);\n      }), { name: this.name, index: sortedIndex });\n    }\n  }, {\n    key: 'round',\n    value: function round() {\n      var decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      return new Series(this.values.map(function (v) {\n        return (0, _utils.round10)(v, -1 * decimals);\n      }));\n    }\n  }, {\n    key: '_alignSeries',\n    value: function _alignSeries(series) {\n      var _this7 = this;\n\n      var seriesAlignment = _immutable2.default.Map({});\n\n      this.index.forEach(function (idx1) {\n        if (!seriesAlignment.has(idx1)) {\n          seriesAlignment = seriesAlignment.set(idx1, _immutable2.default.Map({\n            first: _immutable2.default.List.of(_this7.iloc(idx1)),\n            second: _immutable2.default.List([])\n          }));\n        } else {\n          seriesAlignment = seriesAlignment.updateIn([idx1, 'first'], function (l) {\n            return l.concat(_this7.iloc(idx1));\n          });\n        }\n      });\n\n      series.index.forEach(function (idx2) {\n        if (!seriesAlignment.has(idx2)) {\n          seriesAlignment = seriesAlignment.set(idx2, _immutable2.default.Map({\n            first: _immutable2.default.List([]),\n            second: _immutable2.default.List.of(series.iloc(idx2))\n          }));\n        } else {\n          seriesAlignment = seriesAlignment.updateIn([idx2, 'second'], function (l) {\n            return l.concat(series.iloc(idx2));\n          });\n        }\n      });\n\n      return seriesAlignment;\n    }\n  }, {\n    key: 'where',\n    value: function where(other, op) {\n      var name = this.name;\n      var index = this.index;\n      var kwargs = { name: name, index: index };\n\n      if (!Array.isArray(other) && !(other instanceof _immutable2.default.List) && !(other instanceof Series)) return new Series(this.values.map(function (v) {\n        return op(v, other);\n      }), kwargs);\n\n      if (Array.isArray(other)) {\n        if (other.length !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other[idx]);\n        }), kwargs);\n      } else if (other instanceof _immutable2.default.List) {\n        if (other.size !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other.get(idx));\n        }), kwargs);\n      } else if (other instanceof Series) {\n        if (other.length !== this.length) throw new Error('Must be equal length for comparison');\n        return new Series(this.values.map(function (v, idx) {\n          return op(v, other.iloc(idx));\n        }), kwargs);\n      }\n\n      throw new Error('Must be scalar value, Array, Series, or Immutable.List');\n    }\n  }, {\n    key: 'eq',\n    value: function eq(other) {\n      return this.where(other, function (a, b) {\n        return a === b;\n      });\n    }\n  }, {\n    key: 'lt',\n    value: function lt(other) {\n      return this.where(other, function (a, b) {\n        return a < b;\n      });\n    }\n  }, {\n    key: 'lte',\n    value: function lte(other) {\n      return this.where(other, function (a, b) {\n        return a <= b;\n      });\n    }\n  }, {\n    key: 'gt',\n    value: function gt(other) {\n      return this.where(other, function (a, b) {\n        return a > b;\n      });\n    }\n  }, {\n    key: 'gte',\n    value: function gte(other) {\n      return this.where(other, function (a, b) {\n        return a >= b;\n      });\n    }\n  }, {\n    key: 'notnull',\n    value: function notnull() {\n      return this.where(null, function (a, b) {\n        return a !== b;\n      });\n    }\n  }, {\n    key: 'shift',\n    value: function shift() {\n      var periods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      if (!Number.isInteger(periods)) throw new Error('periods must be an integer');\n\n      if (periods === 0) {\n        return this.copy();\n      } else if (periods < 0) {\n        var absPeriods = Math.abs(periods);\n\n        if (absPeriods > this.length) throw new Error('Periods greater than length of Series');\n\n        var _values = this.values.slice(absPeriods, this.length).concat(_immutable2.default.Repeat(null, absPeriods).toList());\n\n        return new Series(_values, { name: this.name, index: this.index });\n      }\n\n      if (periods > this.length) throw new Error('Periods greater than length of Series');\n\n      var values = _immutable2.default.Repeat(null, periods).toList().concat(this.values.slice(0, this.length - periods));\n\n      return new Series(values, { name: this.name, index: this.index });\n    }\n  }, {\n    key: 'unique',\n    value: function unique() {\n      return this.values.toSet().toList();\n    }\n  }, {\n    key: 'filter',\n    value: function filter(iterBool) {\n      var _this8 = this;\n\n      if (!Array.isArray(iterBool) && !(iterBool instanceof _immutable2.default.List) && !(iterBool instanceof Series)) throw new Error('filter must be an Array, List, or Series');\n\n      var valueIndexMap = { values: [], index: [] };\n      if (iterBool instanceof Series) iterBool.values.forEach(function (v, idx) {\n        if (v === true) {\n          valueIndexMap.values.push(_this8.values.get(idx));\n          valueIndexMap.index.push(_this8.index.get(idx));\n        }\n      });else {\n        iterBool.forEach(function (v, idx) {\n          if (v === true) {\n            valueIndexMap.values.push(_this8.values.get(idx));\n            valueIndexMap.index.push(_this8.index.get(idx));\n          }\n        });\n      }\n\n      return new Series(valueIndexMap.values, { name: this.name, index: valueIndexMap.index });\n    }\n  }, {\n    key: '_cumulativeHelper',\n    value: function _cumulativeHelper() {\n      var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _utils.OP_CUMSUM;\n\n      return new Series((0, _utils.generateCumulativeFunc)(operation)(this.values), this.kwargs);\n    }\n  }, {\n    key: 'cumsum',\n    value: function cumsum() {\n      return this._cumulativeHelper(_utils.OP_CUMSUM);\n    }\n  }, {\n    key: 'cummul',\n    value: function cummul() {\n      return this._cumulativeHelper(_utils.OP_CUMMUL);\n    }\n  }, {\n    key: 'cummax',\n    value: function cummax() {\n      return this._cumulativeHelper(_utils.OP_CUMMAX);\n    }\n  }, {\n    key: 'cummin',\n    value: function cummin() {\n      return this._cumulativeHelper(_utils.OP_CUMMIN);\n    }\n  }, {\n    key: 'to_json',\n    value: function to_json() {\n      var _this9 = this;\n\n      var kwargs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { orient: 'index' };\n\n      var ALLOWED_ORIENT = ['records', 'split', 'index'];\n      var orient = 'index';\n\n      if (typeof kwargs.orient !== 'undefined') {\n        if (ALLOWED_ORIENT.indexOf(kwargs.orient) < 0) throw new TypeError('orient must be in ' + ALLOWED_ORIENT);\n        orient = kwargs.orient;\n      }\n\n      var json = void 0;\n      switch (orient) {\n        case 'records':\n          return this.values.toArray();\n        case 'split':\n          return { index: this.index.toArray(), name: this.name, values: this.values.toJS() };\n        case 'index':\n          json = {};\n          this.values.forEach(function (v, idx) {\n            json[_this9.index.get(idx)] = v;\n          });\n          return json;\n        default:\n          throw new TypeError('orient must be in ' + ALLOWED_ORIENT);\n      }\n    }\n  }, {\n    key: 'rename',\n    value: function rename(name) {\n      return new Series(this._values, { name: name, index: this.index });\n    }\n  }, {\n    key: 'append',\n    value: function append(other) {\n      var ignore_index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return _concatSeries([this, other], { ignore_index: ignore_index });\n    }\n  }, {\n    key: 'kwargs',\n    get: function get() {\n      return {\n        name: this.name,\n        index: this.index\n      };\n    }\n  }, {\n    key: 'dtype',\n    get: function get() {\n      return this._dtype;\n    }\n  }, {\n    key: 'index',\n    get: function get() {\n      return this._get_axis(0);\n    },\n    set: function set(index) {\n      this.set_axis(0, (0, _utils.parseIndex)(index, this.values));\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.values.size;\n    }\n  }, {\n    key: 'values',\n    get: function get() {\n      return (0, _get3.default)(Series.prototype.__proto__ || Object.getPrototypeOf(Series.prototype), 'values', this);\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }]);\n  return Series;\n}(_generic2.default);\n\nexports.default = Series;\n\nvar _concatSeriesValues = function _concatSeriesValues(objs) {\n  var _Immutable$List;\n\n  return (_Immutable$List = _immutable2.default.List([])).concat.apply(_Immutable$List, (0, _toConsumableArray3.default)(objs.map(function (series) {\n    return series.values;\n  })));\n};\nvar _concatSeriesIndices = function _concatSeriesIndices(objs) {\n  var _Immutable$List2;\n\n  return (_Immutable$List2 = _immutable2.default.List([])).concat.apply(_Immutable$List2, (0, _toConsumableArray3.default)(objs.map(function (series) {\n    return series.index;\n  })));\n};\n\nvar _concatSeries = exports._concatSeries = function _concatSeries(objs, kwargs) {\n  if (objs instanceof _immutable2.default.List && objs.filter(function (series) {\n    return series instanceof Series;\n  }).size !== objs.size) throw new Error('Objects must all be Series');else if (Array.isArray(objs) && objs.filter(function (series) {\n    return series instanceof Series;\n  }).length !== objs.length) throw new Error('Objects must all be Series');\n\n  if (!kwargs.ignore_index) return new Series(_concatSeriesValues(objs), { index: _concatSeriesIndices(objs) });else if (kwargs.ignore_index) {\n    return new Series(_concatSeriesValues(objs), { index: _immutable2.default.Range(0, objs.reduce(function (a, b) {\n        return a + b.length;\n      }, 0)).toList() });\n  }\n\n  throw new Error('Not supported');\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}