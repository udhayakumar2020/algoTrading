{"ast":null,"code":"var _jsxFileName = \"C:\\\\algoTrading\\\\letzalgo\\\\react\\\\src\\\\login\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [appID, setAppID] = useState('');\n  const [appSecret, setAppSecret] = useState('');\n  const [redirectURL, setRedirectURL] = useState('');\n  const [result, setresult] = useState('');\n\n  // const handleLogin = () => {\n  //    //  Make a POST request to your Django backend to authenticate\n  //     axios.post('http://localhost:8000/fyersLogin/loginfyers/', {\n  //         app_id: appID,\n  //         app_secret: appSecret,\n  //         redirect_url: redirectURL\n  //     })\n\n  //     .then(response => {\n  //         // Handle successful authentication\n  //         console.log('Login successful:', response.data);\n  //     })\n  //     .catch(error => {\n  //         // Handle authentication error\n  //         console.error('Login failed:', error);\n  //     });\n\n  // };\n\n  const handleLogin = async () => {\n    const authToken = 'your-authentication-token';\n    axios.post('http://localhost:8000/fyersLogin/loginfyers/', {\n      headers: {\n        'Authorization': `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle successful response\n    }).catch(error => {\n      // Handle error\n    });\n\n    // try {\n    //     // axios.get('http://localhost:8000/api/hello-world/')\n\n    //     const response = await axios.post('http://localhost:8000/fyersLogin/loginfyers/', {\n    //         params: {  app_id: appID,\n    //                     app_secret: appSecret,\n    //                     redirect_url: redirectURL }\n    //     });\n    //     setresult(response.data);\n    // } catch (error) {\n\n    //     console.error('Error fetching trading script:', error);\n    // }finally{\n    //     console.log(result)\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"App ID\",\n      value: appID,\n      onChange: e => setAppID(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"App Secret\",\n      value: appSecret,\n      onChange: e => setAppSecret(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Redirect URL\",\n      value: redirectURL,\n      onChange: e => setRedirectURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"co45H14hzDBhAW/BynZsqH8ZiIs=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","appID","setAppID","appSecret","setAppSecret","redirectURL","setRedirectURL","result","setresult","handleLogin","authToken","post","headers","then","response","catch","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/algoTrading/letzalgo/react/src/login/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginForm = () => {\r\n    const [appID, setAppID] = useState('');\r\n    const [appSecret, setAppSecret] = useState('');\r\n    const [redirectURL, setRedirectURL] = useState('');\r\n    const [result, setresult] = useState('');\r\n\r\n    // const handleLogin = () => {\r\n    //    //  Make a POST request to your Django backend to authenticate\r\n    //     axios.post('http://localhost:8000/fyersLogin/loginfyers/', {\r\n    //         app_id: appID,\r\n    //         app_secret: appSecret,\r\n    //         redirect_url: redirectURL\r\n    //     })\r\n        \r\n    //     .then(response => {\r\n    //         // Handle successful authentication\r\n    //         console.log('Login successful:', response.data);\r\n    //     })\r\n    //     .catch(error => {\r\n    //         // Handle authentication error\r\n    //         console.error('Login failed:', error);\r\n    //     });\r\n\r\n        \r\n    // };\r\n    \r\n    \r\n    const handleLogin = async () => {\r\n\r\nconst authToken = 'your-authentication-token';\r\n\r\naxios.post('http://localhost:8000/fyersLogin/loginfyers/', {\r\n    headers: {\r\n        'Authorization': `Bearer ${authToken}`\r\n    }\r\n})\r\n.then(response => {\r\n    // Handle successful response\r\n})\r\n.catch(error => {\r\n    // Handle error\r\n});\r\n\r\n\r\n\r\n\r\n\r\n        // try {\r\n        //     // axios.get('http://localhost:8000/api/hello-world/')\r\n\r\n        //     const response = await axios.post('http://localhost:8000/fyersLogin/loginfyers/', {\r\n        //         params: {  app_id: appID,\r\n        //                     app_secret: appSecret,\r\n        //                     redirect_url: redirectURL }\r\n        //     });\r\n        //     setresult(response.data);\r\n        // } catch (error) {\r\n\r\n        //     console.error('Error fetching trading script:', error);\r\n        // }finally{\r\n        //     console.log(result)\r\n        // }\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" placeholder=\"App ID\" value={appID} onChange={e => setAppID(e.target.value)} />\r\n            <input type=\"password\" placeholder=\"App Secret\" value={appSecret} onChange={e => setAppSecret(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Redirect URL\" value={redirectURL} onChange={e => setRedirectURL(e.target.value)} />\r\n            <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAGA,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAEpC,MAAMC,SAAS,GAAG,2BAA2B;IAE7Cd,KAAK,CAACe,IAAI,CAAC,8CAA8C,EAAE;MACvDC,OAAO,EAAE;QACL,eAAe,EAAG,UAASF,SAAU;MACzC;IACJ,CAAC,CAAC,CACDG,IAAI,CAACC,QAAQ,IAAI;MACd;IAAA,CACH,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZ;IAAA,CACH,CAAC;;IAMM;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAEJ,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,QAAQ;MAACC,KAAK,EAAEnB,KAAM;MAACoB,QAAQ,EAAEC,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjG7B,OAAA;MAAOoB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,YAAY;MAACC,KAAK,EAAEjB,SAAU;MAACkB,QAAQ,EAAEC,CAAC,IAAIlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjH7B,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,cAAc;MAACC,KAAK,EAAEf,WAAY;MAACgB,QAAQ,EAAEC,CAAC,IAAIhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnH7B,OAAA;MAAQ8B,OAAO,EAAEnB,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAzEID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA2Ef,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}