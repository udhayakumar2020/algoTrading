{"ast":null,"code":"var _jsxFileName = \"C:\\\\algoTrading\\\\letzalgo\\\\react\\\\src\\\\data\\\\Datafetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Datafetch = () => {\n  _s();\n  const [scriptName, setScriptName] = useState('');\n  const [date, setDate] = useState('');\n  const [tradingScript, setTradingScript] = useState('');\n  const fetchTradingScript = async () => {\n    try {\n      // axios.get('http://localhost:8000/api/hello-world/')\n\n      const response = await axios.get('http://localhost:8000/fyersLogin/loginfyers/', {\n        params: {\n          script_name: scriptName,\n          date: date\n        }\n      });\n      setTradingScript(response.data);\n    } catch (error) {\n      console.error('Error fetching trading script:', error);\n    } finally {\n      console.log(tradingScript);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trading App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Script Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: scriptName,\n        onChange: e => setScriptName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTradingScript,\n      children: \"Fetch Trading Script\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Trading Script:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Datafetch, \"7Xk1JlCY0NlaTp6DK53g6+YDt/4=\");\n_c = Datafetch;\nexport default Datafetch;\nvar _c;\n$RefreshReg$(_c, \"Datafetch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Datafetch","_s","scriptName","setScriptName","date","setDate","tradingScript","setTradingScript","fetchTradingScript","response","get","params","script_name","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/algoTrading/letzalgo/react/src/data/Datafetch.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Datafetch = () => {\r\n    const [scriptName, setScriptName] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [tradingScript, setTradingScript] = useState('');\r\n\r\n    const fetchTradingScript = async () => {\r\n        try {\r\n            // axios.get('http://localhost:8000/api/hello-world/')\r\n\r\n            const response = await axios.get('http://localhost:8000/fyersLogin/loginfyers/', {\r\n                params: { script_name: scriptName, date: date }\r\n            });\r\n            setTradingScript(response.data);\r\n        } catch (error) {\r\n\r\n            console.error('Error fetching trading script:', error);\r\n        }finally{\r\n            console.log(tradingScript)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Trading App</h1>\r\n            <div>\r\n                <label>Script Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={scriptName}\r\n                    onChange={(e) => setScriptName(e.target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Date:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                />\r\n            </div>\r\n            <button onClick={fetchTradingScript}>Fetch Trading Script</button>\r\n            <p>Trading Script:</p>\r\n            {/* <pre>{tradingScript}</pre> */}\r\n            {/* Display other components such as forms */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Datafetch;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA;;MAEA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8CAA8C,EAAE;QAC7EC,MAAM,EAAE;UAAEC,WAAW,EAAEV,UAAU;UAAEE,IAAI,EAAEA;QAAK;MAClD,CAAC,CAAC;MACFG,gBAAgB,CAACE,QAAQ,CAACI,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D,CAAC,SAAO;MACJC,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC;IAC9B;EAEJ,CAAC;EAED,oBACIP,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BtB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,UAAW;QAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBtB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,IAAK;QACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA;MAAQ4B,OAAO,EAAEnB,kBAAmB;MAAAS,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClEtB,OAAA;MAAAkB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGrB,CAAC;AAEd,CAAC;AAACpB,EAAA,CA/CID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}